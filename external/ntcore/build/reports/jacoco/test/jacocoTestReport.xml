<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="ntcore"><sessioninfo id="STRIDER-c819adf1" start="1700676222326" dump="1700676227136"/><package name="edu/wpi/first/networktables"><class name="edu/wpi/first/networktables/StringSubscriber" sourcefilename="StringSubscriber.java"/><class name="edu/wpi/first/networktables/ProtobufEntryImpl" sourcefilename="ProtobufEntryImpl.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/ProtobufTopic;Ledu/wpi/first/util/protobuf/ProtobufBuffer;ILjava/lang/Object;Z)V" line="31"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/ProtobufTopic;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInto" desc="(Ljava/lang/Object;)Z" line="55"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="()Ledu/wpi/first/networktables/TimestampedObject;" line="72"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="(Ljava/lang/Object;)Ledu/wpi/first/networktables/TimestampedObject;" line="77"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/TimestampedObject;" line="82"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueueValues" desc="()[Ljava/lang/Object;" line="113"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Object;J)V" line="144"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="(Ljava/lang/Object;)V" line="160"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="175"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromRaw" desc="([BLjava/lang/Object;)Ljava/lang/Object;" line="179"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromRaw" desc="(Ledu/wpi/first/networktables/TimestampedRaw;Ljava/lang/Object;)Ledu/wpi/first/networktables/TimestampedObject;" line="192"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="208"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="373" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="86" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/PubSubOption$Kind" sourcefilename="PubSubOption.java"><method name="&lt;clinit&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/LogMessage" sourcefilename="LogMessage.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;ILjava/lang/String;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/IntegerArrayEntryImpl" sourcefilename="IntegerArrayEntryImpl.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/IntegerArrayTopic;I[J)V" line="18"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/IntegerArrayTopic;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[J" line="30"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="([J)[J" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="()Ledu/wpi/first/networktables/TimestampedIntegerArray;" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="([J)Ledu/wpi/first/networktables/TimestampedIntegerArray;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/TimestampedIntegerArray;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueueValues" desc="()[[J" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="([JJ)V" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="([J)V" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/TimestampedInteger" sourcefilename="TimestampedInteger.java"><method name="&lt;init&gt;" desc="(JJJ)V" line="17"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/StructArrayEntry" sourcefilename="StructArrayEntry.java"/><class name="edu/wpi/first/networktables/RawPublisher" sourcefilename="RawPublisher.java"><method name="set" desc="([B)V" line="27"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="([BJ)V" line="38"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="([BII)V" line="49"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/nio/ByteBuffer;)V" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/nio/ByteBuffer;J)V" line="78"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/nio/ByteBuffer;II)V" line="90"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="([B)V" line="111"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="(Ljava/nio/ByteBuffer;)V" line="133"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="([B)V" line="150"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="21"/><counter type="LINE" missed="15" covered="5"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/NetworkTableEvent" sourcefilename="NetworkTableEvent.java"><method name="is" desc="(Ledu/wpi/first/networktables/NetworkTableEvent$Kind;)Z" line="90"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;IILedu/wpi/first/networktables/ConnectionInfo;Ledu/wpi/first/networktables/TopicInfo;Ledu/wpi/first/networktables/ValueEventData;Ledu/wpi/first/networktables/LogMessage;Ledu/wpi/first/networktables/TimeSyncEventData;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="()Ledu/wpi/first/networktables/NetworkTableInstance;" line="150"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/BooleanPublisher" sourcefilename="BooleanPublisher.java"><method name="set" desc="(Z)V" line="25"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Z)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/IntegerEntryImpl" sourcefilename="IntegerEntryImpl.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/IntegerTopic;IJ)V" line="18"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/IntegerTopic;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()J" line="30"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(J)J" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="()Ledu/wpi/first/networktables/TimestampedInteger;" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="(J)Ledu/wpi/first/networktables/TimestampedInteger;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/TimestampedInteger;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueueValues" desc="()[J" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(JJ)V" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="(J)V" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/GenericSubscriber" sourcefilename="GenericSubscriber.java"/><class name="edu/wpi/first/networktables/NetworkTableInstance$NetworkMode" sourcefilename="NetworkTableInstance.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;II)V" line="65"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()I" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/NetworkTablesJNI" sourcefilename="NetworkTablesJNI.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forceLoad" desc="()V" line="52"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildOptions" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/PubSubOptions;" line="63"><counter type="INSTRUCTION" missed="5" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntry" desc="(IILjava/lang/String;Ledu/wpi/first/networktables/PubSubOptions;)I" line="84"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="(IILjava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)I" line="89"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribe" desc="(IILjava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)I" line="143"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publish" desc="(IILjava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)I" line="153"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="publishEx" desc="(IILjava/lang/String;Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)I" line="161"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribeMultiple" desc="(I[Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)I" line="175"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRaw" desc="(IJ[B)Z" line="258"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRaw" desc="(IJLjava/nio/ByteBuffer;)Z" line="264"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRaw" desc="(IJLjava/nio/ByteBuffer;II)Z" line="269"><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDefaultRaw" desc="(IJ[B)Z" line="292"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultRaw" desc="(IJLjava/nio/ByteBuffer;)Z" line="298"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultRaw" desc="(IJLjava/nio/ByteBuffer;II)Z" line="303"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="kindsToMask" desc="(Ljava/util/EnumSet;)I" line="409"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addListener" desc="(I[Ljava/lang/String;Ljava/util/EnumSet;)I" line="417"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addListener" desc="(IILjava/util/EnumSet;)I" line="421"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startEntryDataLog" desc="(ILedu/wpi/first/util/datalog/DataLog;Ljava/lang/String;Ljava/lang/String;)I" line="477"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startConnectionDataLog" desc="(ILedu/wpi/first/util/datalog/DataLog;Ljava/lang/String;)I" line="485"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="5" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="169" covered="119"/><counter type="BRANCH" missed="15" covered="13"/><counter type="LINE" missed="36" covered="30"/><counter type="COMPLEXITY" missed="22" covered="13"/><counter type="METHOD" missed="13" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/NTSendableBuilder" sourcefilename="NTSendableBuilder.java"><method name="getBackendKind" desc="()Ledu/wpi/first/util/sendable/SendableBuilder$BackendKind;" line="37"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/TimestampedFloat" sourcefilename="TimestampedFloat.java"><method name="&lt;init&gt;" desc="(JJF)V" line="17"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/FloatEntry" sourcefilename="FloatEntry.java"/><class name="edu/wpi/first/networktables/DoubleArrayTopic" sourcefilename="DoubleArrayTopic.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;)V" line="18"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;I)V" line="28"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="([D[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/DoubleArraySubscriber;" line="49"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribeEx" desc="(Ljava/lang/String;[D[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/DoubleArraySubscriber;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publish" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/DoubleArrayPublisher;" line="102"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEx" desc="(Ljava/lang/String;Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/DoubleArrayPublisher;" line="132"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="([D[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/DoubleArrayEntry;" line="163"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntryEx" desc="(Ljava/lang/String;[D[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/DoubleArrayEntry;" line="196"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/FloatArrayPublisher" sourcefilename="FloatArrayPublisher.java"><method name="set" desc="([F)V" line="25"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="([F)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/TimestampedBoolean" sourcefilename="TimestampedBoolean.java"><method name="&lt;init&gt;" desc="(JJZ)V" line="17"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/NetworkTablesJNI$Helper" sourcefilename="NetworkTablesJNI.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExtractOnStaticLoad" desc="()Z" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExtractOnStaticLoad" desc="(Z)V" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/NetworkTableType" sourcefilename="NetworkTableType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;IILjava/lang/String;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()I" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueStr" desc="()Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFromInt" desc="(I)Ledu/wpi/first/networktables/NetworkTableType;" line="45"><counter type="INSTRUCTION" missed="22" covered="4"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="11" covered="2"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFromString" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/NetworkTableType;" line="80"><counter type="INSTRUCTION" missed="22" covered="10"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="11" covered="2"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStringFromObject" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="148"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="125" covered="176"/><counter type="BRANCH" missed="58" covered="2"/><counter type="LINE" missed="46" covered="22"/><counter type="COMPLEXITY" missed="42" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/DoubleArrayPublisher" sourcefilename="DoubleArrayPublisher.java"><method name="set" desc="([D)V" line="25"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="([D)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/DoubleArrayEntry" sourcefilename="DoubleArrayEntry.java"/><class name="edu/wpi/first/networktables/NetworkTable" sourcefilename="NetworkTable.java"><method name="basenameKey" desc="(Ljava/lang/String;)Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeKey" desc="(Ljava/lang/String;Z)Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeKey" desc="(Ljava/lang/String;)Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHierarchy" desc="(Ljava/lang/String;)Ljava/util/List;" line="98"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;Ljava/lang/String;)V" line="117"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="()Ledu/wpi/first/networktables/NetworkTableInstance;" line="129"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="134"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/Topic;" line="144"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBooleanTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/BooleanTopic;" line="154"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIntegerTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/IntegerTopic;" line="164"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloatTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/FloatTopic;" line="174"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDoubleTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/DoubleTopic;" line="184"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStringTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/StringTopic;" line="194"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRawTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/RawTopic;" line="204"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBooleanArrayTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/BooleanArrayTopic;" line="214"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIntegerArrayTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/IntegerArrayTopic;" line="224"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloatArrayTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/FloatArrayTopic;" line="234"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDoubleArrayTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/DoubleArrayTopic;" line="244"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStringArrayTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/StringArrayTopic;" line="254"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProtobufTopic" desc="(Ljava/lang/String;Ledu/wpi/first/util/protobuf/Protobuf;)Ledu/wpi/first/networktables/ProtobufTopic;" line="268"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStructTopic" desc="(Ljava/lang/String;Ledu/wpi/first/util/struct/Struct;)Ledu/wpi/first/networktables/StructTopic;" line="280"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStructArrayTopic" desc="(Ljava/lang/String;Ledu/wpi/first/util/struct/Struct;)Ledu/wpi/first/networktables/StructArrayTopic;" line="292"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/NetworkTableEntry;" line="304"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubTable" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/NetworkTable;" line="323"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsKey" desc="(Ljava/lang/String;)Z" line="333"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsSubTable" desc="(Ljava/lang/String;)Z" line="344"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopicInfo" desc="(I)Ljava/util/List;" line="355"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopicInfo" desc="()Ljava/util/List;" line="373"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopics" desc="(I)Ljava/util/List;" line="383"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopics" desc="()Ljava/util/List;" line="401"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKeys" desc="(I)Ljava/util/Set;" line="411"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKeys" desc="()Ljava/util/Set;" line="429"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubTables" desc="()Ljava/util/Set;" line="438"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putValue" desc="(Ljava/lang/String;Ledu/wpi/first/networktables/NetworkTableValue;)Z" line="459"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultValue" desc="(Ljava/lang/String;Ledu/wpi/first/networktables/NetworkTableValue;)Z" line="470"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/NetworkTableValue;" line="480"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPath" desc="()Ljava/lang/String;" line="489"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljava/util/EnumSet;Ledu/wpi/first/networktables/NetworkTable$TableEventListener;)I" line="513"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addListener" desc="(Ljava/lang/String;Ljava/util/EnumSet;Ledu/wpi/first/networktables/NetworkTable$TableEventListener;)I" line="546"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSubTableListener" desc="(Ledu/wpi/first/networktables/NetworkTable$SubTableListener;)I" line="571"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeListener" desc="(I)V" line="606"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="611"><counter type="INSTRUCTION" missed="24" covered="5"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="623"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$addListener$1" desc="(Ledu/wpi/first/networktables/NetworkTable$TableEventListener;Ljava/lang/String;Ledu/wpi/first/networktables/NetworkTableEvent;)V" line="547"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$addListener$0" desc="(ILedu/wpi/first/networktables/NetworkTable$TableEventListener;Ledu/wpi/first/networktables/NetworkTableEvent;)V" line="518"><counter type="INSTRUCTION" missed="9" covered="28"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="490" covered="203"/><counter type="BRANCH" missed="37" covered="17"/><counter type="LINE" missed="79" covered="47"/><counter type="COMPLEXITY" missed="55" covered="17"/><counter type="METHOD" missed="35" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/FloatTopic" sourcefilename="FloatTopic.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;)V" line="18"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;I)V" line="28"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="(F[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/FloatSubscriber;" line="49"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribeEx" desc="(Ljava/lang/String;F[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/FloatSubscriber;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publish" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/FloatPublisher;" line="102"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEx" desc="(Ljava/lang/String;Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/FloatPublisher;" line="132"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="(F[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/FloatEntry;" line="163"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntryEx" desc="(Ljava/lang/String;F[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/FloatEntry;" line="196"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/ValueEventData" sourcefilename="ValueEventData.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;IILedu/wpi/first/networktables/NetworkTableValue;)V" line="31"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/Topic;" line="49"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/GenericPublisher" sourcefilename="GenericPublisher.java"><method name="setValue" desc="(Ljava/lang/Object;)Z" line="36"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBoolean" desc="(Z)Z" line="56"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setInteger" desc="(J)Z" line="75"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFloat" desc="(F)Z" line="94"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDouble" desc="(D)Z" line="113"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setString" desc="(Ljava/lang/String;)Z" line="132"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRaw" desc="([B)Z" line="151"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRaw" desc="(Ljava/nio/ByteBuffer;)Z" line="161"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRaw" desc="([BJ)Z" line="172"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRaw" desc="(Ljava/nio/ByteBuffer;J)Z" line="183"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRaw" desc="([BII)Z" line="196"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRaw" desc="(Ljava/nio/ByteBuffer;II)Z" line="219"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBooleanArray" desc="([Z)Z" line="240"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBooleanArray" desc="([Ljava/lang/Boolean;)Z" line="259"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIntegerArray" desc="([J)Z" line="278"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIntegerArray" desc="([Ljava/lang/Long;)Z" line="297"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFloatArray" desc="([F)Z" line="316"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFloatArray" desc="([Ljava/lang/Float;)Z" line="335"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDoubleArray" desc="([D)Z" line="354"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDoubleArray" desc="([Ljava/lang/Double;)Z" line="373"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setStringArray" desc="([Ljava/lang/String;)Z" line="392"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultRaw" desc="([B)Z" line="474"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultRaw" desc="(Ljava/nio/ByteBuffer;)Z" line="485"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ledu/wpi/first/networktables/NetworkTableValue;)V" line="564"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="123" covered="21"/><counter type="LINE" missed="24" covered="3"/><counter type="COMPLEXITY" missed="22" covered="2"/><counter type="METHOD" missed="22" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/BooleanSubscriber" sourcefilename="BooleanSubscriber.java"><method name="getAsBoolean" desc="()Z" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/StructEntry" sourcefilename="StructEntry.java"/><class name="edu/wpi/first/networktables/NetworkTable$SubTableListener" sourcefilename="NetworkTable.java"/><class name="edu/wpi/first/networktables/BooleanTopic" sourcefilename="BooleanTopic.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;)V" line="18"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;I)V" line="28"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="(Z[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/BooleanSubscriber;" line="49"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribeEx" desc="(Ljava/lang/String;Z[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/BooleanSubscriber;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publish" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/BooleanPublisher;" line="102"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEx" desc="(Ljava/lang/String;Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/BooleanPublisher;" line="132"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="(Z[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/BooleanEntry;" line="163"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntryEx" desc="(Ljava/lang/String;Z[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/BooleanEntry;" line="196"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/StringArrayPublisher" sourcefilename="StringArrayPublisher.java"><method name="set" desc="([Ljava/lang/String;)V" line="25"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="([Ljava/lang/String;)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/StructArrayTopic" sourcefilename="StructArrayTopic.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;Ledu/wpi/first/util/struct/Struct;)V" line="17"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;ILedu/wpi/first/util/struct/Struct;)V" line="22"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wrap" desc="(Ledu/wpi/first/networktables/Topic;Ledu/wpi/first/util/struct/Struct;)Ledu/wpi/first/networktables/StructArrayTopic;" line="35"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wrap" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;ILedu/wpi/first/util/struct/Struct;)Ledu/wpi/first/networktables/StructArrayTopic;" line="50"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="([Ljava/lang/Object;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StructArraySubscriber;" line="66"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publish" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StructArrayPublisher;" line="89"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEx" desc="(Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StructArrayPublisher;" line="115"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="([Ljava/lang/Object;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StructArrayEntry;" line="147"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStruct" desc="()Ledu/wpi/first/util/struct/Struct;" line="157"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="162"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="174"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="156" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/GenericEntryImpl" sourcefilename="GenericEntryImpl.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;I)V" line="18"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/Topic;" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ledu/wpi/first/networktables/NetworkTableValue;" line="29"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(Z)Z" line="41"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="(J)J" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(F)F" line="65"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(D)D" line="77"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRaw" desc="([B)[B" line="101"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBooleanArray" desc="([Z)[Z" line="113"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBooleanArray" desc="([Ljava/lang/Boolean;)[Ljava/lang/Boolean;" line="125"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIntegerArray" desc="([J)[J" line="138"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIntegerArray" desc="([Ljava/lang/Long;)[Ljava/lang/Long;" line="150"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloatArray" desc="([F)[F" line="163"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloatArray" desc="([Ljava/lang/Float;)[Ljava/lang/Float;" line="175"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDoubleArray" desc="([D)[D" line="188"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDoubleArray" desc="([Ljava/lang/Double;)[Ljava/lang/Double;" line="200"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStringArray" desc="([Ljava/lang/String;)[Ljava/lang/String;" line="213"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/NetworkTableValue;" line="218"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ledu/wpi/first/networktables/NetworkTableValue;)Z" line="223"><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Object;J)Z" line="265"><counter type="INSTRUCTION" missed="154" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBoolean" desc="(ZJ)Z" line="312"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setInteger" desc="(JJ)Z" line="324"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFloat" desc="(FJ)Z" line="336"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDouble" desc="(DJ)Z" line="348"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setString" desc="(Ljava/lang/String;J)Z" line="360"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRaw" desc="([BIIJ)Z" line="374"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRaw" desc="(Ljava/nio/ByteBuffer;IIJ)Z" line="387"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBooleanArray" desc="([ZJ)Z" line="399"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBooleanArray" desc="([Ljava/lang/Boolean;J)Z" line="410"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIntegerArray" desc="([JJ)Z" line="422"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIntegerArray" desc="([Ljava/lang/Long;J)Z" line="433"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFloatArray" desc="([FJ)Z" line="445"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFloatArray" desc="([Ljava/lang/Float;J)Z" line="456"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDoubleArray" desc="([DJ)Z" line="468"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDoubleArray" desc="([Ljava/lang/Double;J)Z" line="479"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setStringArray" desc="([Ljava/lang/String;J)Z" line="491"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNumber" desc="(Ljava/lang/Number;J)Z" line="501"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNumberArray" desc="([Ljava/lang/Number;J)Z" line="511"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="(Ledu/wpi/first/networktables/NetworkTableValue;)Z" line="516"><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultValue" desc="(Ljava/lang/Object;)Z" line="558"><counter type="INSTRUCTION" missed="140" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultBoolean" desc="(Z)Z" line="605"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultInteger" desc="(J)Z" line="617"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultFloat" desc="(F)Z" line="629"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultDouble" desc="(D)Z" line="641"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultString" desc="(Ljava/lang/String;)Z" line="653"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultRaw" desc="([BII)Z" line="667"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultRaw" desc="(Ljava/nio/ByteBuffer;II)Z" line="680"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultBooleanArray" desc="([Z)Z" line="692"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultBooleanArray" desc="([Ljava/lang/Boolean;)Z" line="703"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultIntegerArray" desc="([J)Z" line="715"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultIntegerArray" desc="([Ljava/lang/Long;)Z" line="726"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultFloatArray" desc="([F)Z" line="738"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultFloatArray" desc="([Ljava/lang/Float;)Z" line="749"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultDoubleArray" desc="([D)Z" line="761"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultDoubleArray" desc="([Ljava/lang/Double;)Z" line="772"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultStringArray" desc="([Ljava/lang/String;)Z" line="784"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultNumber" desc="(Ljava/lang/Number;)Z" line="794"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultNumberArray" desc="([Ljava/lang/Number;)Z" line="804"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="809"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="775" covered="28"/><counter type="BRANCH" missed="88" covered="0"/><counter type="LINE" missed="161" covered="6"/><counter type="COMPLEXITY" missed="110" covered="4"/><counter type="METHOD" missed="56" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/DoubleSubscriber" sourcefilename="DoubleSubscriber.java"><method name="getAsDouble" desc="()D" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/StringArrayEntryImpl" sourcefilename="StringArrayEntryImpl.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/StringArrayTopic;I[Ljava/lang/String;)V" line="18"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/StringArrayTopic;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[Ljava/lang/String;" line="30"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="([Ljava/lang/String;)[Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="()Ledu/wpi/first/networktables/TimestampedStringArray;" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="([Ljava/lang/String;)Ledu/wpi/first/networktables/TimestampedStringArray;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/TimestampedStringArray;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueueValues" desc="()[[Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="([Ljava/lang/String;J)V" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="([Ljava/lang/String;)V" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/TimestampedIntegerArray" sourcefilename="TimestampedIntegerArray.java"><method name="&lt;init&gt;" desc="(JJ[J)V" line="17"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/NetworkTableInstance" sourcefilename="NetworkTableInstance.java"><method name="&lt;init&gt;" desc="(I)V" line="85"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="93"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValid" desc="()Z" line="107"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ledu/wpi/first/networktables/NetworkTableInstance;" line="119"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="()Ledu/wpi/first/networktables/NetworkTableInstance;" line="132"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHandle" desc="()I" line="143"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/Topic;" line="153"><counter type="INSTRUCTION" missed="2" covered="37"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBooleanTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/BooleanTopic;" line="174"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIntegerTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/IntegerTopic;" line="202"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloatTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/FloatTopic;" line="230"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDoubleTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/DoubleTopic;" line="258"><counter type="INSTRUCTION" missed="6" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStringTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/StringTopic;" line="286"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRawTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/RawTopic;" line="314"><counter type="INSTRUCTION" missed="6" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBooleanArrayTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/BooleanArrayTopic;" line="342"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIntegerArrayTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/IntegerArrayTopic;" line="370"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloatArrayTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/FloatArrayTopic;" line="398"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDoubleArrayTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/DoubleArrayTopic;" line="426"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStringArrayTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/StringArrayTopic;" line="454"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProtobufTopic" desc="(Ljava/lang/String;Ledu/wpi/first/util/protobuf/Protobuf;)Ledu/wpi/first/networktables/ProtobufTopic;" line="487"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStructTopic" desc="(Ljava/lang/String;Ledu/wpi/first/util/struct/Struct;)Ledu/wpi/first/networktables/StructTopic;" line="521"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStructArrayTopic" desc="(Ljava/lang/String;Ledu/wpi/first/util/struct/Struct;)Ledu/wpi/first/networktables/StructArrayTopic;" line="555"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="topicHandlesToTopics" desc="([I)[Ledu/wpi/first/networktables/Topic;" line="580"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopics" desc="()[Ledu/wpi/first/networktables/Topic;" line="593"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopics" desc="(Ljava/lang/String;)[Ledu/wpi/first/networktables/Topic;" line="605"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopics" desc="(Ljava/lang/String;I)[Ledu/wpi/first/networktables/Topic;" line="618"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopics" desc="(Ljava/lang/String;[Ljava/lang/String;)[Ledu/wpi/first/networktables/Topic;" line="631"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopicInfo" desc="()[Ledu/wpi/first/networktables/TopicInfo;" line="640"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopicInfo" desc="(Ljava/lang/String;)[Ledu/wpi/first/networktables/TopicInfo;" line="652"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopicInfo" desc="(Ljava/lang/String;I)[Ledu/wpi/first/networktables/TopicInfo;" line="665"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopicInfo" desc="(Ljava/lang/String;[Ljava/lang/String;)[Ledu/wpi/first/networktables/TopicInfo;" line="678"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/NetworkTableEntry;" line="691"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCachedTopic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/Topic;" line="707"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCachedTopic" desc="(I)Ledu/wpi/first/networktables/Topic;" line="722"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTable" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/NetworkTable;" line="745"><counter type="INSTRUCTION" missed="8" covered="40"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeListener" desc="(I)V" line="955"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="waitForListenerQueue" desc="(D)Z" line="968"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addConnectionListener" desc="(ZLjava/util/function/Consumer;)I" line="982"><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addTimeSyncListener" desc="(ZLjava/util/function/Consumer;)I" line="1000"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ledu/wpi/first/networktables/Topic;Ljava/util/EnumSet;Ljava/util/function/Consumer;)I" line="1024"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ledu/wpi/first/networktables/Subscriber;Ljava/util/EnumSet;Ljava/util/function/Consumer;)I" line="1045"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ledu/wpi/first/networktables/MultiSubscriber;Ljava/util/EnumSet;Ljava/util/function/Consumer;)I" line="1066"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ledu/wpi/first/networktables/NetworkTableEntry;Ljava/util/EnumSet;Ljava/util/function/Consumer;)I" line="1086"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="([Ljava/lang/String;Ljava/util/EnumSet;Ljava/util/function/Consumer;)I" line="1110"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNetworkMode" desc="()Ljava/util/EnumSet;" line="1123"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startLocal" desc="()V" line="1138"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stopLocal" desc="()V" line="1146"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startServer" desc="()V" line="1154"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startServer" desc="(Ljava/lang/String;)V" line="1164"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startServer" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="1174"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startServer" desc="(Ljava/lang/String;Ljava/lang/String;I)V" line="1185"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startServer" desc="(Ljava/lang/String;Ljava/lang/String;II)V" line="1197"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stopServer" desc="()V" line="1202"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startClient3" desc="(Ljava/lang/String;)V" line="1211"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startClient4" desc="(Ljava/lang/String;)V" line="1220"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stopClient" desc="()V" line="1225"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setServer" desc="(Ljava/lang/String;)V" line="1235"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setServer" desc="(Ljava/lang/String;I)V" line="1245"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setServer" desc="([Ljava/lang/String;)V" line="1255"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setServer" desc="([Ljava/lang/String;I)V" line="1266"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setServer" desc="([Ljava/lang/String;[I)V" line="1281"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setServerTeam" desc="(I)V" line="1291"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setServerTeam" desc="(II)V" line="1302"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="disconnect" desc="()V" line="1310"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startDSClient" desc="()V" line="1318"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startDSClient" desc="(I)V" line="1328"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stopDSClient" desc="()V" line="1333"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flushLocal" desc="()V" line="1341"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="1350"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnections" desc="()[Ledu/wpi/first/networktables/ConnectionInfo;" line="1360"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConnected" desc="()Z" line="1369"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getServerTimeOffset" desc="()Ljava/util/OptionalLong;" line="1382"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startEntryDataLog" desc="(Ledu/wpi/first/util/datalog/DataLog;Ljava/lang/String;Ljava/lang/String;)I" line="1396"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stopEntryDataLog" desc="(I)V" line="1405"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startConnectionDataLog" desc="(Ledu/wpi/first/util/datalog/DataLog;Ljava/lang/String;)I" line="1417"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stopConnectionDataLog" desc="(I)V" line="1426"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addLogger" desc="(IILjava/util/function/Consumer;)I" line="1441"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSchema" desc="(Ljava/lang/String;)Z" line="1453"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSchema" desc="(Ljava/lang/String;Ljava/lang/String;[B)V" line="1468"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSchema" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="1487"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSchema" desc="(Ledu/wpi/first/util/protobuf/Protobuf;)V" line="1501"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSchema" desc="(Ledu/wpi/first/util/struct/Struct;)V" line="1513"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="1518"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="1530"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSchemaImpl" desc="(Ledu/wpi/first/util/struct/Struct;Ljava/util/Set;)V" line="1534"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$addSchema$3" desc="(Ljava/lang/String;[B)V" line="1503"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$addSchema$2" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ledu/wpi/first/networktables/RawPublisher;" line="1488"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$addSchema$1" desc="(Ljava/lang/String;[BLjava/lang/String;)Ledu/wpi/first/networktables/RawPublisher;" line="1469"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$close$0" desc="(Ljava/lang/String;Ledu/wpi/first/networktables/RawPublisher;)V" line="95"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1153" covered="332"/><counter type="BRANCH" missed="110" covered="18"/><counter type="LINE" missed="270" covered="79"/><counter type="COMPLEXITY" missed="129" covered="23"/><counter type="METHOD" missed="67" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/TimestampedObject" sourcefilename="TimestampedObject.java"><method name="&lt;init&gt;" desc="(JJLjava/lang/Object;)V" line="16"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/BooleanArrayEntryImpl" sourcefilename="BooleanArrayEntryImpl.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/BooleanArrayTopic;I[Z)V" line="18"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/BooleanArrayTopic;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[Z" line="30"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="([Z)[Z" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="()Ledu/wpi/first/networktables/TimestampedBooleanArray;" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="([Z)Ledu/wpi/first/networktables/TimestampedBooleanArray;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/TimestampedBooleanArray;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueueValues" desc="()[[Z" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="([ZJ)V" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="([Z)V" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/TopicInfo" sourcefilename="TopicInfo.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;ILjava/lang/String;ILjava/lang/String;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="()Ledu/wpi/first/networktables/NetworkTableInstance;" line="51"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/Topic;" line="60"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/NetworkTableListener" sourcefilename="NetworkTableListener.java"><method name="createListener" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;[Ljava/lang/String;Ljava/util/EnumSet;Ljava/util/function/Consumer;)Ledu/wpi/first/networktables/NetworkTableListener;" line="31"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createListener" desc="(Ledu/wpi/first/networktables/Topic;Ljava/util/EnumSet;Ljava/util/function/Consumer;)Ledu/wpi/first/networktables/NetworkTableListener;" line="47"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createListener" desc="(Ledu/wpi/first/networktables/Subscriber;Ljava/util/EnumSet;Ljava/util/function/Consumer;)Ledu/wpi/first/networktables/NetworkTableListener;" line="63"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createListener" desc="(Ledu/wpi/first/networktables/MultiSubscriber;Ljava/util/EnumSet;Ljava/util/function/Consumer;)Ledu/wpi/first/networktables/NetworkTableListener;" line="79"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createListener" desc="(Ledu/wpi/first/networktables/NetworkTableEntry;Ljava/util/EnumSet;Ljava/util/function/Consumer;)Ledu/wpi/first/networktables/NetworkTableListener;" line="95"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createConnectionListener" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;ZLjava/util/function/Consumer;)Ledu/wpi/first/networktables/NetworkTableListener;" line="109"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createTimeSyncListener" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;ZLjava/util/function/Consumer;)Ledu/wpi/first/networktables/NetworkTableListener;" line="122"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createLogger" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;IILjava/util/function/Consumer;)Ledu/wpi/first/networktables/NetworkTableListener;" line="140"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="145"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValid" desc="()Z" line="157"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHandle" desc="()I" line="166"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="waitForQueue" desc="(D)Z" line="179"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;I)V" line="182"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/StringArraySubscriber" sourcefilename="StringArraySubscriber.java"/><class name="edu/wpi/first/networktables/DoublePublisher" sourcefilename="DoublePublisher.java"><method name="set" desc="(D)V" line="25"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(D)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/BooleanArrayTopic" sourcefilename="BooleanArrayTopic.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;)V" line="18"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;I)V" line="28"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="([Z[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/BooleanArraySubscriber;" line="49"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribeEx" desc="(Ljava/lang/String;[Z[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/BooleanArraySubscriber;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publish" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/BooleanArrayPublisher;" line="102"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEx" desc="(Ljava/lang/String;Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/BooleanArrayPublisher;" line="132"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="([Z[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/BooleanArrayEntry;" line="163"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntryEx" desc="(Ljava/lang/String;[Z[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/BooleanArrayEntry;" line="196"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/ProtobufTopic" sourcefilename="ProtobufTopic.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;Ledu/wpi/first/util/protobuf/Protobuf;)V" line="17"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;ILedu/wpi/first/util/protobuf/Protobuf;)V" line="22"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wrap" desc="(Ledu/wpi/first/networktables/Topic;Ledu/wpi/first/util/protobuf/Protobuf;)Ledu/wpi/first/networktables/ProtobufTopic;" line="35"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wrap" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;ILedu/wpi/first/util/protobuf/Protobuf;)Ledu/wpi/first/networktables/ProtobufTopic;" line="50"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="(Ljava/lang/Object;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/ProtobufSubscriber;" line="66"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publish" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/ProtobufPublisher;" line="89"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEx" desc="(Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/ProtobufPublisher;" line="115"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="(Ljava/lang/Object;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/ProtobufEntry;" line="147"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProto" desc="()Ledu/wpi/first/util/protobuf/Protobuf;" line="157"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="162"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="174"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="152" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/FloatArrayEntry" sourcefilename="FloatArrayEntry.java"/><class name="edu/wpi/first/networktables/EntryBase" sourcefilename="EntryBase.java"><method name="&lt;init&gt;" desc="(I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValid" desc="()Z" line="20"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHandle" desc="()I" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="30"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exists" desc="()Z" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastChange" desc="()J" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="6"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/ProtobufPublisher" sourcefilename="ProtobufPublisher.java"><method name="set" desc="(Ljava/lang/Object;)V" line="29"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/lang/Object;)V" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/StringArrayTopic" sourcefilename="StringArrayTopic.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;)V" line="18"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;I)V" line="28"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="([Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StringArraySubscriber;" line="49"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribeEx" desc="(Ljava/lang/String;[Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StringArraySubscriber;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publish" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StringArrayPublisher;" line="102"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEx" desc="(Ljava/lang/String;Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StringArrayPublisher;" line="132"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="([Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StringArrayEntry;" line="163"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntryEx" desc="(Ljava/lang/String;[Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StringArrayEntry;" line="196"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/MultiSubscriber" sourcefilename="MultiSubscriber.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;[Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)V" line="19"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="26"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="()Ledu/wpi/first/networktables/NetworkTableInstance;" line="38"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValid" desc="()Z" line="47"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHandle" desc="()I" line="56"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/NetworkTable$1" sourcefilename="NetworkTable.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTable;ILedu/wpi/first/networktables/NetworkTable$SubTableListener;Ledu/wpi/first/networktables/NetworkTable;)V" line="577"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ledu/wpi/first/networktables/NetworkTableEvent;)V" line="582"><counter type="INSTRUCTION" missed="2" covered="44"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="64"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/PubSubOption" sourcefilename="PubSubOption.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/PubSubOption$Kind;Z)V" line="21"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/PubSubOption$Kind;I)V" line="28"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/PubSubOption$Kind;D)V" line="35"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="periodic" desc="(D)Ledu/wpi/first/networktables/PubSubOption;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sendAll" desc="(Z)Ledu/wpi/first/networktables/PubSubOption;" line="61"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="topicsOnly" desc="(Z)Ledu/wpi/first/networktables/PubSubOption;" line="71"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keepDuplicates" desc="(Z)Ledu/wpi/first/networktables/PubSubOption;" line="82"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pollStorage" desc="(I)Ledu/wpi/first/networktables/PubSubOption;" line="94"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="disableRemote" desc="(Z)Ledu/wpi/first/networktables/PubSubOption;" line="105"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="disableLocal" desc="(Z)Ledu/wpi/first/networktables/PubSubOption;" line="116"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="excludePublisher" desc="(I)Ledu/wpi/first/networktables/PubSubOption;" line="127"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="excludePublisher" desc="(Ledu/wpi/first/networktables/Publisher;)Ledu/wpi/first/networktables/PubSubOption;" line="138"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="excludeSelf" desc="(Z)Ledu/wpi/first/networktables/PubSubOption;" line="149"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="107" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/PubSub" sourcefilename="PubSub.java"/><class name="edu/wpi/first/networktables/DoubleArrayEntryImpl" sourcefilename="DoubleArrayEntryImpl.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/DoubleArrayTopic;I[D)V" line="18"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/DoubleArrayTopic;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[D" line="30"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="([D)[D" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="()Ledu/wpi/first/networktables/TimestampedDoubleArray;" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="([D)Ledu/wpi/first/networktables/TimestampedDoubleArray;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/TimestampedDoubleArray;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueueValues" desc="()[[D" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="([DJ)V" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="([D)V" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/IntegerArraySubscriber" sourcefilename="IntegerArraySubscriber.java"/><class name="edu/wpi/first/networktables/NetworkTableEvent$Kind" sourcefilename="NetworkTableEvent.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;II)V" line="60"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()I" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="147"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="158"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/RawEntry" sourcefilename="RawEntry.java"/><class name="edu/wpi/first/networktables/BooleanEntryImpl" sourcefilename="BooleanEntryImpl.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/BooleanTopic;IZ)V" line="18"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/BooleanTopic;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Z" line="30"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Z)Z" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="()Ledu/wpi/first/networktables/TimestampedBoolean;" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="(Z)Ledu/wpi/first/networktables/TimestampedBoolean;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/TimestampedBoolean;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueueValues" desc="()[Z" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(ZJ)V" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="(Z)V" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/StringTopic" sourcefilename="StringTopic.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;)V" line="18"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;I)V" line="28"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="(Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StringSubscriber;" line="49"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribeEx" desc="(Ljava/lang/String;Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StringSubscriber;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publish" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StringPublisher;" line="102"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEx" desc="(Ljava/lang/String;Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StringPublisher;" line="132"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="(Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StringEntry;" line="163"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntryEx" desc="(Ljava/lang/String;Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StringEntry;" line="196"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/TimestampedDoubleArray" sourcefilename="TimestampedDoubleArray.java"><method name="&lt;init&gt;" desc="(JJ[D)V" line="17"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/NetworkTableListenerPoller" sourcefilename="NetworkTableListenerPoller.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addListener" desc="([Ljava/lang/String;Ljava/util/EnumSet;)I" line="33"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ledu/wpi/first/networktables/Topic;Ljava/util/EnumSet;)I" line="45"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ledu/wpi/first/networktables/Subscriber;Ljava/util/EnumSet;)I" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ledu/wpi/first/networktables/MultiSubscriber;Ljava/util/EnumSet;)I" line="67"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ledu/wpi/first/networktables/NetworkTableEntry;Ljava/util/EnumSet;)I" line="78"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addConnectionListener" desc="(Z)I" line="90"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addTimeSyncListener" desc="(Z)I" line="106"><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addLogger" desc="(II)I" line="124"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(I)V" line="133"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/NetworkTableEvent;" line="142"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="147"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValid" desc="()Z" line="159"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHandle" desc="()I" line="168"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="40"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="15" covered="12"/><counter type="COMPLEXITY" missed="14" covered="4"/><counter type="METHOD" missed="10" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/PubSubOptions" sourcefilename="PubSubOptions.java"><method name="&lt;init&gt;" desc="([Ledu/wpi/first/networktables/PubSubOption;)V" line="15"><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(IDIZZZZZZZ)V" line="61"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="109" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/IntegerEntry" sourcefilename="IntegerEntry.java"/><class name="edu/wpi/first/networktables/Topic" sourcefilename="Topic.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;I)V" line="15"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValid" desc="()Z" line="26"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHandle" desc="()I" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="()Ledu/wpi/first/networktables/NetworkTableInstance;" line="44"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ledu/wpi/first/networktables/NetworkTableType;" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTypeString" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInfo" desc="()Ledu/wpi/first/networktables/TopicInfo;" line="81"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPersistent" desc="(Z)V" line="90"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPersistent" desc="()Z" line="99"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRetained" desc="(Z)V" line="108"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRetained" desc="()Z" line="117"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exists" desc="()Z" line="126"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperty" desc="(Ljava/lang/String;)Ljava/lang/String;" line="136"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProperty" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="147"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteProperty" desc="(Ljava/lang/String;)V" line="156"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperties" desc="()Ljava/lang/String;" line="166"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProperties" desc="(Ljava/lang/String;)V" line="178"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="genericSubscribe" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/GenericSubscriber;" line="190"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="genericSubscribe" desc="(Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/GenericSubscriber;" line="206"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="genericPublish" desc="(Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/GenericPublisher;" line="227"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="genericPublishEx" desc="(Ljava/lang/String;Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/GenericPublisher;" line="251"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGenericEntry" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/GenericEntry;" line="277"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGenericEntry" desc="(Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/GenericEntry;" line="297"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="305"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="317"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="152" covered="22"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="39" covered="7"/><counter type="COMPLEXITY" missed="28" covered="2"/><counter type="METHOD" missed="24" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/NetworkTableInstance$ListenerStorage" sourcefilename="NetworkTableInstance.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;)V" line="770"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="([Ljava/lang/String;Ljava/util/EnumSet;Ljava/util/function/Consumer;)I" line="787"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(ILjava/util/EnumSet;Ljava/util/function/Consumer;)I" line="805"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addLogger" desc="(IILjava/util/function/Consumer;)I" line="820"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(I)V" line="835"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="846"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startThread" desc="()V" line="853"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="waitForQueue" desc="(D)Z" line="922"><counter type="INSTRUCTION" missed="14" covered="33"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$startThread$0" desc="()V" line="856"><counter type="INSTRUCTION" missed="44" covered="78"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="19" covered="18"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="73" covered="265"/><counter type="BRANCH" missed="12" covered="14"/><counter type="LINE" missed="30" covered="65"/><counter type="COMPLEXITY" missed="11" covered="11"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/RawEntryImpl" sourcefilename="RawEntryImpl.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/RawTopic;I[B)V" line="20"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/RawTopic;" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[B" line="32"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="([B)[B" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAtomic" desc="()Ledu/wpi/first/networktables/TimestampedRaw;" line="42"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="([B)Ledu/wpi/first/networktables/TimestampedRaw;" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/TimestampedRaw;" line="52"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueueValues" desc="()[[B" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="([BIIJ)V" line="62"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/nio/ByteBuffer;IIJ)V" line="67"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDefault" desc="([BII)V" line="72"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="(Ljava/nio/ByteBuffer;II)V" line="77"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="82"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="33"/><counter type="LINE" missed="12" covered="9"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="9" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/DoubleEntry" sourcefilename="DoubleEntry.java"/><class name="edu/wpi/first/networktables/IntegerPublisher" sourcefilename="IntegerPublisher.java"><method name="set" desc="(J)V" line="25"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(J)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/DoubleEntryImpl" sourcefilename="DoubleEntryImpl.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/DoubleTopic;ID)V" line="18"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/DoubleTopic;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()D" line="30"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(D)D" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="()Ledu/wpi/first/networktables/TimestampedDouble;" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="(D)Ledu/wpi/first/networktables/TimestampedDouble;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/TimestampedDouble;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueueValues" desc="()[D" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(DJ)V" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="(D)V" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="10"/><counter type="LINE" missed="13" covered="4"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="10" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/BooleanArrayEntry" sourcefilename="BooleanArrayEntry.java"/><class name="edu/wpi/first/networktables/DoubleTopic" sourcefilename="DoubleTopic.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;)V" line="18"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;I)V" line="28"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribe" desc="(D[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/DoubleSubscriber;" line="49"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribeEx" desc="(Ljava/lang/String;D[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/DoubleSubscriber;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publish" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/DoublePublisher;" line="102"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="publishEx" desc="(Ljava/lang/String;Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/DoublePublisher;" line="132"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="(D[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/DoubleEntry;" line="163"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntryEx" desc="(Ljava/lang/String;D[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/DoubleEntry;" line="196"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="73" covered="18"/><counter type="LINE" missed="17" covered="5"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/IntegerArrayEntry" sourcefilename="IntegerArrayEntry.java"/><class name="edu/wpi/first/networktables/NetworkTable$TableEventListener" sourcefilename="NetworkTable.java"/><class name="edu/wpi/first/networktables/TimestampedStringArray" sourcefilename="TimestampedStringArray.java"><method name="&lt;init&gt;" desc="(JJ[Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/TableListener" sourcefilename="TableListener.java"/><class name="edu/wpi/first/networktables/BooleanArraySubscriber" sourcefilename="BooleanArraySubscriber.java"/><class name="edu/wpi/first/networktables/StructArrayPublisher" sourcefilename="StructArrayPublisher.java"><method name="set" desc="([Ljava/lang/Object;)V" line="29"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="([Ljava/lang/Object;)V" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/StructSubscriber" sourcefilename="StructSubscriber.java"/><class name="edu/wpi/first/networktables/TimestampedRaw" sourcefilename="TimestampedRaw.java"><method name="&lt;init&gt;" desc="(JJ[B)V" line="17"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/TimestampedFloatArray" sourcefilename="TimestampedFloatArray.java"><method name="&lt;init&gt;" desc="(JJ[F)V" line="17"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/IntegerArrayPublisher" sourcefilename="IntegerArrayPublisher.java"><method name="set" desc="([J)V" line="25"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="([J)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/BooleanArrayPublisher" sourcefilename="BooleanArrayPublisher.java"><method name="set" desc="([Z)V" line="25"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="([Z)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/FloatSubscriber" sourcefilename="FloatSubscriber.java"><method name="getAsFloat" desc="()F" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/IntegerArrayTopic" sourcefilename="IntegerArrayTopic.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;)V" line="18"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;I)V" line="28"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="([J[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/IntegerArraySubscriber;" line="49"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribeEx" desc="(Ljava/lang/String;[J[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/IntegerArraySubscriber;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publish" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/IntegerArrayPublisher;" line="102"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEx" desc="(Ljava/lang/String;Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/IntegerArrayPublisher;" line="132"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="([J[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/IntegerArrayEntry;" line="163"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntryEx" desc="(Ljava/lang/String;[J[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/IntegerArrayEntry;" line="196"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/TimestampedString" sourcefilename="TimestampedString.java"><method name="&lt;init&gt;" desc="(JJLjava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/StructPublisher" sourcefilename="StructPublisher.java"><method name="set" desc="(Ljava/lang/Object;)V" line="29"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/lang/Object;)V" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/FloatArrayEntryImpl" sourcefilename="FloatArrayEntryImpl.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/FloatArrayTopic;I[F)V" line="18"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/FloatArrayTopic;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[F" line="30"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="([F)[F" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="()Ledu/wpi/first/networktables/TimestampedFloatArray;" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="([F)Ledu/wpi/first/networktables/TimestampedFloatArray;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/TimestampedFloatArray;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueueValues" desc="()[[F" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="([FJ)V" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="([F)V" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/StringPublisher" sourcefilename="StringPublisher.java"><method name="set" desc="(Ljava/lang/String;)V" line="25"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/lang/String;)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/NTSendable" sourcefilename="NTSendable.java"><method name="initSendable" desc="(Ledu/wpi/first/util/sendable/SendableBuilder;)V" line="21"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/StringArrayEntry" sourcefilename="StringArrayEntry.java"/><class name="edu/wpi/first/networktables/StructArrayEntryImpl" sourcefilename="StructArrayEntryImpl.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/StructArrayTopic;Ledu/wpi/first/util/struct/StructBuffer;I[Ljava/lang/Object;Z)V" line="31"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/StructArrayTopic;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="()Ledu/wpi/first/networktables/TimestampedObject;" line="55"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="([Ljava/lang/Object;)Ledu/wpi/first/networktables/TimestampedObject;" line="60"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/TimestampedObject;" line="65"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueueValues" desc="()[[Ljava/lang/Object;" line="96"><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="([Ljava/lang/Object;J)V" line="128"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="([Ljava/lang/Object;)V" line="145"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="160"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromRaw" desc="([B[Ljava/lang/Object;)[Ljava/lang/Object;" line="165"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromRaw" desc="(Ledu/wpi/first/networktables/TimestampedRaw;[Ljava/lang/Object;)Ledu/wpi/first/networktables/TimestampedObject;" line="179"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="196"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="340" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="79" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/TimestampedDouble" sourcefilename="TimestampedDouble.java"><method name="&lt;init&gt;" desc="(JJD)V" line="17"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/FloatArraySubscriber" sourcefilename="FloatArraySubscriber.java"/><class name="edu/wpi/first/networktables/FloatArrayTopic" sourcefilename="FloatArrayTopic.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;)V" line="18"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;I)V" line="28"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="([F[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/FloatArraySubscriber;" line="49"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribeEx" desc="(Ljava/lang/String;[F[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/FloatArraySubscriber;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publish" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/FloatArrayPublisher;" line="102"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEx" desc="(Ljava/lang/String;Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/FloatArrayPublisher;" line="132"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="([F[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/FloatArrayEntry;" line="163"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntryEx" desc="(Ljava/lang/String;[F[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/FloatArrayEntry;" line="196"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/IntegerTopic" sourcefilename="IntegerTopic.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;)V" line="18"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;I)V" line="28"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="(J[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/IntegerSubscriber;" line="49"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribeEx" desc="(Ljava/lang/String;J[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/IntegerSubscriber;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publish" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/IntegerPublisher;" line="102"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEx" desc="(Ljava/lang/String;Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/IntegerPublisher;" line="132"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="(J[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/IntegerEntry;" line="163"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntryEx" desc="(Ljava/lang/String;J[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/IntegerEntry;" line="196"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/GenericEntry" sourcefilename="GenericEntry.java"/><class name="edu/wpi/first/networktables/StructTopic" sourcefilename="StructTopic.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;Ledu/wpi/first/util/struct/Struct;)V" line="17"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;ILedu/wpi/first/util/struct/Struct;)V" line="22"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wrap" desc="(Ledu/wpi/first/networktables/Topic;Ledu/wpi/first/util/struct/Struct;)Ledu/wpi/first/networktables/StructTopic;" line="35"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wrap" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;ILedu/wpi/first/util/struct/Struct;)Ledu/wpi/first/networktables/StructTopic;" line="49"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="(Ljava/lang/Object;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StructSubscriber;" line="65"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publish" desc="([Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StructPublisher;" line="88"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEx" desc="(Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StructPublisher;" line="114"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="(Ljava/lang/Object;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/StructEntry;" line="146"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStruct" desc="()Ledu/wpi/first/util/struct/Struct;" line="156"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="161"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="173"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="152" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/FloatEntryImpl" sourcefilename="FloatEntryImpl.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/FloatTopic;IF)V" line="18"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/FloatTopic;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()F" line="30"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(F)F" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="()Ledu/wpi/first/networktables/TimestampedFloat;" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="(F)Ledu/wpi/first/networktables/TimestampedFloat;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/TimestampedFloat;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueueValues" desc="()[F" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(FJ)V" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="(F)V" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/NetworkTableValue" sourcefilename="NetworkTableValue.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableType;Ljava/lang/Object;JJ)V" line="12"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableType;Ljava/lang/Object;J)V" line="20"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableType;Ljava/lang/Object;)V" line="24"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/Object;JJ)V" line="28"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ledu/wpi/first/networktables/NetworkTableType;" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTime" desc="()J" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getServerTime" desc="()J" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValid" desc="()Z" line="77"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBoolean" desc="()Z" line="86"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInteger" desc="()Z" line="95"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFloat" desc="()Z" line="104"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDouble" desc="()Z" line="113"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isString" desc="()Z" line="122"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRaw" desc="()Z" line="131"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBooleanArray" desc="()Z" line="140"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIntegerArray" desc="()Z" line="149"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFloatArray" desc="()Z" line="158"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDoubleArray" desc="()Z" line="167"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isStringArray" desc="()Z" line="176"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="()Z" line="190"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="()J" line="203"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="()F" line="216"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="()D" line="229"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="()Ljava/lang/String;" line="242"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRaw" desc="()[B" line="255"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBooleanArray" desc="()[Z" line="268"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIntegerArray" desc="()[J" line="281"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloatArray" desc="()[F" line="294"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDoubleArray" desc="()[D" line="307"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStringArray" desc="()[Ljava/lang/String;" line="320"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeBoolean" desc="(Z)Ledu/wpi/first/networktables/NetworkTableValue;" line="337"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeBoolean" desc="(ZJ)Ledu/wpi/first/networktables/NetworkTableValue;" line="348"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeInteger" desc="(J)Ledu/wpi/first/networktables/NetworkTableValue;" line="358"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeInteger" desc="(JJ)Ledu/wpi/first/networktables/NetworkTableValue;" line="369"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeFloat" desc="(F)Ledu/wpi/first/networktables/NetworkTableValue;" line="379"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeFloat" desc="(FJ)Ledu/wpi/first/networktables/NetworkTableValue;" line="390"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeDouble" desc="(D)Ledu/wpi/first/networktables/NetworkTableValue;" line="400"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeDouble" desc="(DJ)Ledu/wpi/first/networktables/NetworkTableValue;" line="411"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeString" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/NetworkTableValue;" line="421"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeString" desc="(Ljava/lang/String;J)Ledu/wpi/first/networktables/NetworkTableValue;" line="432"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeRaw" desc="([B)Ledu/wpi/first/networktables/NetworkTableValue;" line="442"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeRaw" desc="([BJ)Ledu/wpi/first/networktables/NetworkTableValue;" line="453"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeBooleanArray" desc="([Z)Ledu/wpi/first/networktables/NetworkTableValue;" line="463"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeBooleanArray" desc="([ZJ)Ledu/wpi/first/networktables/NetworkTableValue;" line="474"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeBooleanArray" desc="([Ljava/lang/Boolean;)Ledu/wpi/first/networktables/NetworkTableValue;" line="484"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeBooleanArray" desc="([Ljava/lang/Boolean;J)Ledu/wpi/first/networktables/NetworkTableValue;" line="495"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeIntegerArray" desc="([J)Ledu/wpi/first/networktables/NetworkTableValue;" line="505"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeIntegerArray" desc="([JJ)Ledu/wpi/first/networktables/NetworkTableValue;" line="516"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeIntegerArray" desc="([Ljava/lang/Long;)Ledu/wpi/first/networktables/NetworkTableValue;" line="526"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeIntegerArray" desc="([Ljava/lang/Long;J)Ledu/wpi/first/networktables/NetworkTableValue;" line="537"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeFloatArray" desc="([F)Ledu/wpi/first/networktables/NetworkTableValue;" line="547"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeFloatArray" desc="([FJ)Ledu/wpi/first/networktables/NetworkTableValue;" line="558"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeFloatArray" desc="([Ljava/lang/Float;)Ledu/wpi/first/networktables/NetworkTableValue;" line="568"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeFloatArray" desc="([Ljava/lang/Float;J)Ledu/wpi/first/networktables/NetworkTableValue;" line="579"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeDoubleArray" desc="([D)Ledu/wpi/first/networktables/NetworkTableValue;" line="589"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeDoubleArray" desc="([DJ)Ledu/wpi/first/networktables/NetworkTableValue;" line="600"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeDoubleArray" desc="([Ljava/lang/Double;)Ledu/wpi/first/networktables/NetworkTableValue;" line="610"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeDoubleArray" desc="([Ljava/lang/Double;J)Ledu/wpi/first/networktables/NetworkTableValue;" line="621"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeStringArray" desc="([Ljava/lang/String;)Ledu/wpi/first/networktables/NetworkTableValue;" line="631"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeStringArray" desc="([Ljava/lang/String;J)Ledu/wpi/first/networktables/NetworkTableValue;" line="642"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="647"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="659"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNativeBooleanArray" desc="([Ljava/lang/Boolean;)[Z" line="666"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNativeDoubleArray" desc="([Ljava/lang/Number;)[D" line="675"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNativeIntegerArray" desc="([Ljava/lang/Number;)[J" line="684"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNativeFloatArray" desc="([Ljava/lang/Number;)[F" line="693"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNativeBooleanArray" desc="([Z)[Ljava/lang/Boolean;" line="702"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNativeIntegerArray" desc="([J)[Ljava/lang/Long;" line="711"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNativeFloatArray" desc="([F)[Ljava/lang/Float;" line="720"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNativeDoubleArray" desc="([D)[Ljava/lang/Double;" line="729"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="741" covered="0"/><counter type="BRANCH" missed="72" covered="0"/><counter type="LINE" missed="130" covered="0"/><counter type="COMPLEXITY" missed="107" covered="0"/><counter type="METHOD" missed="71" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/RawTopic" sourcefilename="RawTopic.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;)V" line="15"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;I)V" line="25"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribe" desc="(Ljava/lang/String;[B[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/RawSubscriber;" line="50"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publish" desc="(Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/RawPublisher;" line="79"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEx" desc="(Ljava/lang/String;Ljava/lang/String;[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/RawPublisher;" line="109"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntry" desc="(Ljava/lang/String;[B[Ledu/wpi/first/networktables/PubSubOption;)Ledu/wpi/first/networktables/RawEntry;" line="144"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="49" covered="18"/><counter type="LINE" missed="11" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/BooleanEntry" sourcefilename="BooleanEntry.java"/><class name="edu/wpi/first/networktables/StringEntry" sourcefilename="StringEntry.java"/><class name="edu/wpi/first/networktables/TimestampedBooleanArray" sourcefilename="TimestampedBooleanArray.java"><method name="&lt;init&gt;" desc="(JJ[Z)V" line="17"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/ProtobufSubscriber" sourcefilename="ProtobufSubscriber.java"/><class name="edu/wpi/first/networktables/ConnectionInfo" sourcefilename="ConnectionInfo.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;IJI)V" line="44"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/FloatPublisher" sourcefilename="FloatPublisher.java"><method name="set" desc="(F)V" line="25"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(F)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/StructArraySubscriber" sourcefilename="StructArraySubscriber.java"/><class name="edu/wpi/first/networktables/RawSubscriber" sourcefilename="RawSubscriber.java"/><class name="edu/wpi/first/networktables/DoubleArraySubscriber" sourcefilename="DoubleArraySubscriber.java"/><class name="edu/wpi/first/networktables/Publisher" sourcefilename="Publisher.java"/><class name="edu/wpi/first/networktables/StringEntryImpl" sourcefilename="StringEntryImpl.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/StringTopic;ILjava/lang/String;)V" line="18"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/StringTopic;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/String;" line="30"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="()Ledu/wpi/first/networktables/TimestampedString;" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="(Ljava/lang/String;)Ledu/wpi/first/networktables/TimestampedString;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/TimestampedString;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueueValues" desc="()[Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/String;J)V" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="(Ljava/lang/String;)V" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/IntegerSubscriber" sourcefilename="IntegerSubscriber.java"><method name="getAsLong" desc="()J" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/ProtobufEntry" sourcefilename="ProtobufEntry.java"/><class name="edu/wpi/first/networktables/TimeSyncEventData" sourcefilename="TimeSyncEventData.java"><method name="&lt;init&gt;" desc="(JJZ)V" line="32"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/wpi/first/networktables/NetworkTableEntry" sourcefilename="NetworkTableEntry.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/NetworkTableInstance;I)V" line="31"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/Topic;I)V" line="40"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="46"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValid" desc="()Z" line="55"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHandle" desc="()I" line="65"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/Topic;" line="75"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="()Ledu/wpi/first/networktables/NetworkTableInstance;" line="84"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exists" desc="()Z" line="94"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="103"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ledu/wpi/first/networktables/NetworkTableType;" line="112"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlags" desc="()I" line="123"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastChange" desc="()J" line="133"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ledu/wpi/first/networktables/NetworkTableValue;" line="143"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(Z)Z" line="154"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="(J)J" line="165"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(F)F" line="176"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(D)D" line="187"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="198"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRaw" desc="([B)[B" line="209"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBooleanArray" desc="([Z)[Z" line="220"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBooleanArray" desc="([Ljava/lang/Boolean;)[Ljava/lang/Boolean;" line="231"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIntegerArray" desc="([J)[J" line="243"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIntegerArray" desc="([Ljava/lang/Long;)[Ljava/lang/Long;" line="254"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloatArray" desc="([F)[F" line="266"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloatArray" desc="([Ljava/lang/Float;)[Ljava/lang/Float;" line="277"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDoubleArray" desc="([D)[D" line="289"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDoubleArray" desc="([Ljava/lang/Double;)[Ljava/lang/Double;" line="300"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStringArray" desc="([Ljava/lang/String;)[Ljava/lang/String;" line="312"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumber" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="323"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberArray" desc="([Ljava/lang/Number;)[Ljava/lang/Number;" line="334"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/NetworkTableValue;" line="348"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDataType" desc="(Ljava/lang/Object;)Z" line="358"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultValue" desc="(Ljava/lang/Object;)Z" line="383"><counter type="INSTRUCTION" missed="233" covered="0"/><counter type="BRANCH" missed="44" covered="0"/><counter type="LINE" missed="51" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultBoolean" desc="(Z)Z" line="458"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultInteger" desc="(J)Z" line="468"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultFloat" desc="(F)Z" line="478"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultDouble" desc="(D)Z" line="488"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultString" desc="(Ljava/lang/String;)Z" line="498"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultRaw" desc="([B)Z" line="508"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultRaw" desc="(Ljava/nio/ByteBuffer;)Z" line="519"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultRaw" desc="([BII)Z" line="531"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultRaw" desc="(Ljava/nio/ByteBuffer;II)Z" line="543"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultBooleanArray" desc="([Z)Z" line="553"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultBooleanArray" desc="([Ljava/lang/Boolean;)Z" line="563"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultIntegerArray" desc="([J)Z" line="573"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultIntegerArray" desc="([Ljava/lang/Long;)Z" line="583"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultFloatArray" desc="([F)Z" line="593"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultFloatArray" desc="([Ljava/lang/Float;)Z" line="603"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultDoubleArray" desc="([D)Z" line="613"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultDoubleArray" desc="([Ljava/lang/Double;)Z" line="623"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultStringArray" desc="([Ljava/lang/String;)Z" line="633"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultNumber" desc="(Ljava/lang/Number;)Z" line="643"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultNumberArray" desc="([Ljava/lang/Number;)Z" line="653"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Object;)Z" line="664"><counter type="INSTRUCTION" missed="232" covered="0"/><counter type="BRANCH" missed="44" covered="0"/><counter type="LINE" missed="51" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBoolean" desc="(Z)Z" line="739"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setInteger" desc="(J)Z" line="749"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFloat" desc="(F)Z" line="759"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDouble" desc="(D)Z" line="769"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setString" desc="(Ljava/lang/String;)Z" line="779"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRaw" desc="([B)Z" line="789"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRaw" desc="(Ljava/nio/ByteBuffer;)Z" line="799"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRaw" desc="([BII)Z" line="811"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRaw" desc="(Ljava/nio/ByteBuffer;II)Z" line="823"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBooleanArray" desc="([Z)Z" line="833"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBooleanArray" desc="([Ljava/lang/Boolean;)Z" line="843"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIntegerArray" desc="([J)Z" line="853"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIntegerArray" desc="([Ljava/lang/Long;)Z" line="863"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFloatArray" desc="([F)Z" line="873"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFloatArray" desc="([Ljava/lang/Float;)Z" line="883"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDoubleArray" desc="([D)Z" line="893"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDoubleArray" desc="([Ljava/lang/Double;)Z" line="903"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setStringArray" desc="([Ljava/lang/String;)Z" line="913"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNumber" desc="(Ljava/lang/Number;)Z" line="923"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNumberArray" desc="([Ljava/lang/Number;)Z" line="933"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFlags" desc="(I)V" line="944"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearFlags" desc="(I)V" line="955"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPersistent" desc="()V" line="960"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearPersistent" desc="()V" line="965"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPersistent" desc="()Z" line="974"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="979"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="delete" desc="()V" line="989"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="994"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="1006"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="976" covered="0"/><counter type="BRANCH" missed="128" covered="0"/><counter type="LINE" missed="202" covered="0"/><counter type="COMPLEXITY" missed="157" covered="0"/><counter type="METHOD" missed="83" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/wpi/first/networktables/Subscriber" sourcefilename="Subscriber.java"/><class name="edu/wpi/first/networktables/StructEntryImpl" sourcefilename="StructEntryImpl.java"><method name="&lt;init&gt;" desc="(Ledu/wpi/first/networktables/StructTopic;Ledu/wpi/first/util/struct/StructBuffer;ILjava/lang/Object;Z)V" line="30"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTopic" desc="()Ledu/wpi/first/networktables/StructTopic;" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="49"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInto" desc="(Ljava/lang/Object;)Z" line="54"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="()Ledu/wpi/first/networktables/TimestampedObject;" line="66"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAtomic" desc="(Ljava/lang/Object;)Ledu/wpi/first/networktables/TimestampedObject;" line="71"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueue" desc="()[Ledu/wpi/first/networktables/TimestampedObject;" line="76"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readQueueValues" desc="()[Ljava/lang/Object;" line="107"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Object;J)V" line="139"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="(Ljava/lang/Object;)V" line="156"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unpublish" desc="()V" line="171"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromRaw" desc="([BLjava/lang/Object;)Ljava/lang/Object;" line="176"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromRaw" desc="(Ledu/wpi/first/networktables/TimestampedRaw;Ljava/lang/Object;)Ledu/wpi/first/networktables/TimestampedObject;" line="190"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="206"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="370" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="84" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="NetworkTable.java"><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="2"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="4"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="0" cb="0"/><line nr="154" mi="8" ci="0" mb="0" cb="0"/><line nr="164" mi="8" ci="0" mb="0" cb="0"/><line nr="174" mi="8" ci="0" mb="0" cb="0"/><line nr="184" mi="8" ci="0" mb="0" cb="0"/><line nr="194" mi="8" ci="0" mb="0" cb="0"/><line nr="204" mi="8" ci="0" mb="0" cb="0"/><line nr="214" mi="8" ci="0" mb="0" cb="0"/><line nr="224" mi="8" ci="0" mb="0" cb="0"/><line nr="234" mi="8" ci="0" mb="0" cb="0"/><line nr="244" mi="8" ci="0" mb="0" cb="0"/><line nr="254" mi="8" ci="0" mb="0" cb="0"/><line nr="268" mi="9" ci="0" mb="0" cb="0"/><line nr="280" mi="9" ci="0" mb="0" cb="0"/><line nr="292" mi="9" ci="0" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="6" ci="0" mb="0" cb="0"/><line nr="305" mi="2" ci="0" mb="2" cb="0"/><line nr="306" mi="8" ci="0" mb="0" cb="0"/><line nr="307" mi="7" ci="0" mb="0" cb="0"/><line nr="308" mi="2" ci="0" mb="2" cb="0"/><line nr="309" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="2" ci="0" mb="0" cb="0"/><line nr="323" mi="0" ci="10" mb="0" cb="0"/><line nr="333" mi="13" ci="0" mb="4" cb="0"/><line nr="344" mi="9" ci="0" mb="0" cb="0"/><line nr="345" mi="7" ci="0" mb="2" cb="0"/><line nr="355" mi="4" ci="0" mb="0" cb="0"/><line nr="356" mi="6" ci="0" mb="0" cb="0"/><line nr="357" mi="21" ci="0" mb="2" cb="0"/><line nr="358" mi="5" ci="0" mb="0" cb="0"/><line nr="359" mi="5" ci="0" mb="2" cb="0"/><line nr="360" mi="1" ci="0" mb="0" cb="0"/><line nr="362" mi="4" ci="0" mb="0" cb="0"/><line nr="364" mi="2" ci="0" mb="0" cb="0"/><line nr="373" mi="4" ci="0" mb="0" cb="0"/><line nr="383" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="6" ci="0" mb="0" cb="0"/><line nr="385" mi="21" ci="0" mb="2" cb="0"/><line nr="386" mi="5" ci="0" mb="0" cb="0"/><line nr="387" mi="5" ci="0" mb="2" cb="0"/><line nr="388" mi="1" ci="0" mb="0" cb="0"/><line nr="390" mi="5" ci="0" mb="0" cb="0"/><line nr="392" mi="2" ci="0" mb="0" cb="0"/><line nr="401" mi="4" ci="0" mb="0" cb="0"/><line nr="411" mi="4" ci="0" mb="0" cb="0"/><line nr="412" mi="6" ci="0" mb="0" cb="0"/><line nr="413" mi="21" ci="0" mb="2" cb="0"/><line nr="414" mi="5" ci="0" mb="0" cb="0"/><line nr="415" mi="5" ci="0" mb="2" cb="0"/><line nr="416" mi="1" ci="0" mb="0" cb="0"/><line nr="418" mi="4" ci="0" mb="0" cb="0"/><line nr="420" mi="2" ci="0" mb="0" cb="0"/><line nr="429" mi="4" ci="0" mb="0" cb="0"/><line nr="438" mi="4" ci="0" mb="0" cb="0"/><line nr="439" mi="6" ci="0" mb="0" cb="0"/><line nr="440" mi="21" ci="0" mb="2" cb="0"/><line nr="441" mi="5" ci="0" mb="0" cb="0"/><line nr="442" mi="4" ci="0" mb="0" cb="0"/><line nr="443" mi="3" ci="0" mb="2" cb="0"/><line nr="444" mi="1" ci="0" mb="0" cb="0"/><line nr="446" mi="7" ci="0" mb="0" cb="0"/><line nr="448" mi="2" ci="0" mb="0" cb="0"/><line nr="459" mi="6" ci="0" mb="0" cb="0"/><line nr="470" mi="6" ci="0" mb="0" cb="0"/><line nr="480" mi="5" ci="0" mb="0" cb="0"/><line nr="489" mi="3" ci="0" mb="0" cb="0"/><line nr="513" mi="0" ci="6" mb="0" cb="0"/><line nr="514" mi="0" ci="16" mb="0" cb="0"/><line nr="518" mi="0" ci="2" mb="0" cb="0"/><line nr="519" mi="0" ci="3" mb="1" cb="1"/><line nr="520" mi="0" ci="5" mb="0" cb="0"/><line nr="521" mi="3" ci="0" mb="2" cb="0"/><line nr="522" mi="5" ci="0" mb="0" cb="0"/><line nr="524" mi="0" ci="2" mb="1" cb="1"/><line nr="525" mi="1" ci="0" mb="0" cb="0"/><line nr="527" mi="0" ci="4" mb="0" cb="0"/><line nr="528" mi="0" ci="5" mb="0" cb="2"/><line nr="530" mi="0" ci="1" mb="0" cb="0"/><line nr="532" mi="0" ci="5" mb="0" cb="0"/><line nr="533" mi="0" ci="1" mb="0" cb="0"/><line nr="546" mi="4" ci="0" mb="0" cb="0"/><line nr="547" mi="16" ci="0" mb="0" cb="0"/><line nr="571" mi="0" ci="6" mb="0" cb="0"/><line nr="572" mi="0" ci="2" mb="0" cb="0"/><line nr="574" mi="0" ci="13" mb="0" cb="0"/><line nr="576" mi="0" ci="8" mb="0" cb="0"/><line nr="577" mi="0" ci="14" mb="0" cb="0"/><line nr="578" mi="0" ci="6" mb="0" cb="0"/><line nr="582" mi="0" ci="3" mb="1" cb="1"/><line nr="583" mi="1" ci="0" mb="0" cb="0"/><line nr="585" mi="0" ci="7" mb="0" cb="0"/><line nr="586" mi="0" ci="4" mb="0" cb="0"/><line nr="587" mi="0" ci="3" mb="0" cb="2"/><line nr="588" mi="0" ci="1" mb="0" cb="0"/><line nr="590" mi="0" ci="5" mb="0" cb="0"/><line nr="591" mi="0" ci="5" mb="1" cb="1"/><line nr="592" mi="1" ci="0" mb="0" cb="0"/><line nr="594" mi="0" ci="5" mb="0" cb="0"/><line nr="595" mi="0" ci="10" mb="0" cb="0"/><line nr="596" mi="0" ci="1" mb="0" cb="0"/><line nr="606" mi="4" ci="0" mb="0" cb="0"/><line nr="607" mi="1" ci="0" mb="0" cb="0"/><line nr="611" mi="0" ci="3" mb="1" cb="1"/><line nr="612" mi="0" ci="2" mb="0" cb="0"/><line nr="614" mi="3" ci="0" mb="2" cb="0"/><line nr="615" mi="2" ci="0" mb="0" cb="0"/><line nr="617" mi="3" ci="0" mb="0" cb="0"/><line nr="618" mi="16" ci="0" mb="4" cb="0"/><line nr="623" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="492" covered="267"/><counter type="BRANCH" missed="39" covered="21"/><counter type="LINE" missed="81" covered="59"/><counter type="COMPLEXITY" missed="57" covered="20"/><counter type="METHOD" missed="35" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TimestampedBooleanArray.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GenericEntry.java"/><sourcefile name="IntegerArrayTopic.java"><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IntegerTopic.java"><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TimestampedRaw.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IntegerArrayPublisher.java"><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RawPublisher.java"><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="21"/><counter type="LINE" missed="15" covered="5"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoublePublisher.java"><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GenericSubscriber.java"/><sourcefile name="FloatEntryImpl.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TimestampedBoolean.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TimestampedInteger.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TimeSyncEventData.java"><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoubleEntryImpl.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="10"/><counter type="LINE" missed="13" covered="4"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="10" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringEntry.java"/><sourcefile name="Publisher.java"/><sourcefile name="TableListener.java"/><sourcefile name="FloatPublisher.java"><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StringTopic.java"><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Subscriber.java"/><sourcefile name="BooleanEntry.java"/><sourcefile name="TimestampedFloat.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BooleanArrayEntryImpl.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NetworkTableType.java"><line nr="8" mi="0" ci="52" mb="0" cb="0"/><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="8" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="8" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="8" mb="0" cb="0"/><line nr="17" mi="0" ci="8" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="11" cb="1"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="11" cb="1"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="2" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="2" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="2" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="6" ci="0" mb="4" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="6" ci="0" mb="4" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="4" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="6" ci="0" mb="4" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="9" ci="0" mb="6" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="2" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="4" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="125" covered="176"/><counter type="BRANCH" missed="58" covered="2"/><counter type="LINE" missed="46" covered="22"/><counter type="COMPLEXITY" missed="42" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimestampedDoubleArray.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FloatArrayEntry.java"/><sourcefile name="TimestampedIntegerArray.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FloatArrayEntryImpl.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ProtobufTopic.java"><line nr="17" mi="6" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="2" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="2" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="14" ci="0" mb="4" cb="0"/><line nr="174" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="152" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PubSubOption.java"><line nr="9" mi="40" ci="0" mb="0" cb="0"/><line nr="10" mi="6" ci="0" mb="0" cb="0"/><line nr="11" mi="6" ci="0" mb="0" cb="0"/><line nr="12" mi="6" ci="0" mb="0" cb="0"/><line nr="13" mi="6" ci="0" mb="0" cb="0"/><line nr="14" mi="6" ci="0" mb="0" cb="0"/><line nr="15" mi="6" ci="0" mb="0" cb="0"/><line nr="16" mi="6" ci="0" mb="0" cb="0"/><line nr="17" mi="6" ci="0" mb="0" cb="0"/><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="138" mi="8" ci="0" mb="2" cb="0"/><line nr="149" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="201" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="IntegerArrayEntryImpl.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TimestampedFloatArray.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IntegerPublisher.java"><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ProtobufEntry.java"/><sourcefile name="RawTopic.java"><line nr="15" mi="6" ci="0" mb="0" cb="0"/><line nr="16" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="7" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="7" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="7" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="18"/><counter type="LINE" missed="11" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimestampedString.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DoubleArrayEntryImpl.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GenericPublisher.java"><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="10" mb="0" cb="0"/><line nr="196" mi="7" ci="0" mb="0" cb="0"/><line nr="219" mi="7" ci="0" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="278" mi="5" ci="0" mb="0" cb="0"/><line nr="297" mi="5" ci="0" mb="0" cb="0"/><line nr="316" mi="5" ci="0" mb="0" cb="0"/><line nr="335" mi="5" ci="0" mb="0" cb="0"/><line nr="354" mi="5" ci="0" mb="0" cb="0"/><line nr="373" mi="5" ci="0" mb="0" cb="0"/><line nr="392" mi="5" ci="0" mb="0" cb="0"/><line nr="474" mi="7" ci="0" mb="0" cb="0"/><line nr="485" mi="3" ci="0" mb="0" cb="0"/><line nr="486" mi="9" ci="0" mb="0" cb="0"/><line nr="564" mi="4" ci="0" mb="0" cb="0"/><line nr="565" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="123" covered="21"/><counter type="LINE" missed="24" covered="3"/><counter type="COMPLEXITY" missed="22" covered="2"/><counter type="METHOD" missed="22" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LogMessage.java"><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringArrayPublisher.java"><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BooleanArraySubscriber.java"/><sourcefile name="BooleanSubscriber.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GenericEntryImpl.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="5" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="6" ci="0" mb="12" cb="0"/><line nr="227" mi="8" ci="0" mb="0" cb="0"/><line nr="229" mi="7" ci="0" mb="0" cb="0"/><line nr="230" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="7" ci="0" mb="0" cb="0"/><line nr="233" mi="1" ci="0" mb="0" cb="0"/><line nr="235" mi="7" ci="0" mb="0" cb="0"/><line nr="236" mi="1" ci="0" mb="0" cb="0"/><line nr="238" mi="7" ci="0" mb="0" cb="0"/><line nr="240" mi="7" ci="0" mb="0" cb="0"/><line nr="242" mi="7" ci="0" mb="0" cb="0"/><line nr="244" mi="7" ci="0" mb="0" cb="0"/><line nr="246" mi="7" ci="0" mb="0" cb="0"/><line nr="248" mi="7" ci="0" mb="0" cb="0"/><line nr="250" mi="7" ci="0" mb="0" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="3" ci="0" mb="2" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="267" mi="3" ci="0" mb="2" cb="0"/><line nr="268" mi="7" ci="0" mb="0" cb="0"/><line nr="269" mi="3" ci="0" mb="2" cb="0"/><line nr="270" mi="7" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="2" cb="0"/><line nr="272" mi="7" ci="0" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="2" cb="0"/><line nr="274" mi="6" ci="0" mb="0" cb="0"/><line nr="275" mi="3" ci="0" mb="2" cb="0"/><line nr="276" mi="6" ci="0" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="2" cb="0"/><line nr="278" mi="6" ci="0" mb="0" cb="0"/><line nr="279" mi="3" ci="0" mb="2" cb="0"/><line nr="280" mi="6" ci="0" mb="0" cb="0"/><line nr="281" mi="3" ci="0" mb="2" cb="0"/><line nr="282" mi="6" ci="0" mb="0" cb="0"/><line nr="283" mi="3" ci="0" mb="2" cb="0"/><line nr="284" mi="6" ci="0" mb="0" cb="0"/><line nr="285" mi="3" ci="0" mb="2" cb="0"/><line nr="286" mi="6" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="2" cb="0"/><line nr="288" mi="6" ci="0" mb="0" cb="0"/><line nr="289" mi="3" ci="0" mb="2" cb="0"/><line nr="290" mi="6" ci="0" mb="0" cb="0"/><line nr="291" mi="3" ci="0" mb="2" cb="0"/><line nr="292" mi="6" ci="0" mb="0" cb="0"/><line nr="293" mi="3" ci="0" mb="2" cb="0"/><line nr="294" mi="6" ci="0" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="2" cb="0"/><line nr="296" mi="6" ci="0" mb="0" cb="0"/><line nr="298" mi="3" ci="0" mb="0" cb="0"/><line nr="299" mi="5" ci="0" mb="0" cb="0"/><line nr="312" mi="6" ci="0" mb="0" cb="0"/><line nr="324" mi="6" ci="0" mb="0" cb="0"/><line nr="336" mi="6" ci="0" mb="0" cb="0"/><line nr="348" mi="6" ci="0" mb="0" cb="0"/><line nr="360" mi="6" ci="0" mb="0" cb="0"/><line nr="374" mi="0" ci="8" mb="0" cb="0"/><line nr="387" mi="0" ci="8" mb="0" cb="0"/><line nr="399" mi="6" ci="0" mb="0" cb="0"/><line nr="410" mi="6" ci="0" mb="0" cb="0"/><line nr="422" mi="6" ci="0" mb="0" cb="0"/><line nr="433" mi="6" ci="0" mb="0" cb="0"/><line nr="445" mi="6" ci="0" mb="0" cb="0"/><line nr="456" mi="6" ci="0" mb="0" cb="0"/><line nr="468" mi="6" ci="0" mb="0" cb="0"/><line nr="479" mi="6" ci="0" mb="0" cb="0"/><line nr="491" mi="6" ci="0" mb="0" cb="0"/><line nr="501" mi="6" ci="0" mb="0" cb="0"/><line nr="511" mi="6" ci="0" mb="0" cb="0"/><line nr="516" mi="3" ci="0" mb="0" cb="0"/><line nr="517" mi="3" ci="0" mb="0" cb="0"/><line nr="518" mi="6" ci="0" mb="12" cb="0"/><line nr="520" mi="8" ci="0" mb="0" cb="0"/><line nr="522" mi="7" ci="0" mb="0" cb="0"/><line nr="523" mi="1" ci="0" mb="0" cb="0"/><line nr="525" mi="7" ci="0" mb="0" cb="0"/><line nr="526" mi="1" ci="0" mb="0" cb="0"/><line nr="528" mi="7" ci="0" mb="0" cb="0"/><line nr="529" mi="1" ci="0" mb="0" cb="0"/><line nr="531" mi="7" ci="0" mb="0" cb="0"/><line nr="533" mi="7" ci="0" mb="0" cb="0"/><line nr="535" mi="7" ci="0" mb="0" cb="0"/><line nr="537" mi="7" ci="0" mb="0" cb="0"/><line nr="539" mi="7" ci="0" mb="0" cb="0"/><line nr="541" mi="7" ci="0" mb="0" cb="0"/><line nr="543" mi="7" ci="0" mb="0" cb="0"/><line nr="545" mi="2" ci="0" mb="0" cb="0"/><line nr="558" mi="3" ci="0" mb="2" cb="0"/><line nr="559" mi="5" ci="0" mb="0" cb="0"/><line nr="560" mi="3" ci="0" mb="2" cb="0"/><line nr="561" mi="6" ci="0" mb="0" cb="0"/><line nr="562" mi="3" ci="0" mb="2" cb="0"/><line nr="563" mi="7" ci="0" mb="0" cb="0"/><line nr="564" mi="3" ci="0" mb="2" cb="0"/><line nr="565" mi="6" ci="0" mb="0" cb="0"/><line nr="566" mi="3" ci="0" mb="2" cb="0"/><line nr="567" mi="5" ci="0" mb="0" cb="0"/><line nr="568" mi="3" ci="0" mb="2" cb="0"/><line nr="569" mi="5" ci="0" mb="0" cb="0"/><line nr="570" mi="3" ci="0" mb="2" cb="0"/><line nr="571" mi="5" ci="0" mb="0" cb="0"/><line nr="572" mi="3" ci="0" mb="2" cb="0"/><line nr="573" mi="5" ci="0" mb="0" cb="0"/><line nr="574" mi="3" ci="0" mb="2" cb="0"/><line nr="575" mi="5" ci="0" mb="0" cb="0"/><line nr="576" mi="3" ci="0" mb="2" cb="0"/><line nr="577" mi="5" ci="0" mb="0" cb="0"/><line nr="578" mi="3" ci="0" mb="2" cb="0"/><line nr="579" mi="5" ci="0" mb="0" cb="0"/><line nr="580" mi="3" ci="0" mb="2" cb="0"/><line nr="581" mi="5" ci="0" mb="0" cb="0"/><line nr="582" mi="3" ci="0" mb="2" cb="0"/><line nr="583" mi="5" ci="0" mb="0" cb="0"/><line nr="584" mi="3" ci="0" mb="2" cb="0"/><line nr="585" mi="5" ci="0" mb="0" cb="0"/><line nr="586" mi="3" ci="0" mb="2" cb="0"/><line nr="587" mi="5" ci="0" mb="0" cb="0"/><line nr="588" mi="3" ci="0" mb="2" cb="0"/><line nr="589" mi="5" ci="0" mb="0" cb="0"/><line nr="591" mi="3" ci="0" mb="0" cb="0"/><line nr="592" mi="5" ci="0" mb="0" cb="0"/><line nr="605" mi="6" ci="0" mb="0" cb="0"/><line nr="617" mi="6" ci="0" mb="0" cb="0"/><line nr="629" mi="6" ci="0" mb="0" cb="0"/><line nr="641" mi="6" ci="0" mb="0" cb="0"/><line nr="653" mi="6" ci="0" mb="0" cb="0"/><line nr="667" mi="8" ci="0" mb="0" cb="0"/><line nr="680" mi="8" ci="0" mb="0" cb="0"/><line nr="692" mi="6" ci="0" mb="0" cb="0"/><line nr="703" mi="5" ci="0" mb="0" cb="0"/><line nr="715" mi="6" ci="0" mb="0" cb="0"/><line nr="726" mi="5" ci="0" mb="0" cb="0"/><line nr="738" mi="6" ci="0" mb="0" cb="0"/><line nr="749" mi="5" ci="0" mb="0" cb="0"/><line nr="761" mi="6" ci="0" mb="0" cb="0"/><line nr="772" mi="5" ci="0" mb="0" cb="0"/><line nr="784" mi="6" ci="0" mb="0" cb="0"/><line nr="794" mi="5" ci="0" mb="0" cb="0"/><line nr="804" mi="5" ci="0" mb="0" cb="0"/><line nr="809" mi="3" ci="0" mb="0" cb="0"/><line nr="810" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="775" covered="28"/><counter type="BRANCH" missed="88" covered="0"/><counter type="LINE" missed="161" covered="6"/><counter type="COMPLEXITY" missed="110" covered="4"/><counter type="METHOD" missed="56" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntegerSubscriber.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RawEntry.java"/><sourcefile name="Topic.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="7" ci="0" mb="2" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="7" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="227" mi="7" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="7" ci="0" mb="0" cb="0"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="277" mi="5" ci="0" mb="0" cb="0"/><line nr="297" mi="0" ci="7" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="305" mi="3" ci="0" mb="2" cb="0"/><line nr="306" mi="2" ci="0" mb="0" cb="0"/><line nr="308" mi="3" ci="0" mb="2" cb="0"/><line nr="309" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="10" ci="0" mb="2" cb="0"/><line nr="317" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="152" covered="22"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="39" covered="7"/><counter type="COMPLEXITY" missed="28" covered="2"/><counter type="METHOD" missed="24" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimestampedStringArray.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NetworkTablesJNI.java"><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="1" cb="1"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="2" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="1" cb="1"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="7" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="7" mb="0" cb="0"/><line nr="161" mi="8" ci="0" mb="0" cb="0"/><line nr="175" mi="6" ci="0" mb="0" cb="0"/><line nr="258" mi="8" ci="0" mb="0" cb="0"/><line nr="264" mi="3" ci="0" mb="0" cb="0"/><line nr="265" mi="10" ci="0" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="2"/><line nr="270" mi="0" ci="2" mb="0" cb="2"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="2"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="2"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="279" mi="0" ci="7" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="1" cb="1"/><line nr="281" mi="0" ci="11" mb="0" cb="0"/><line nr="283" mi="5" ci="0" mb="0" cb="0"/><line nr="292" mi="8" ci="0" mb="0" cb="0"/><line nr="298" mi="3" ci="0" mb="0" cb="0"/><line nr="299" mi="10" ci="0" mb="0" cb="0"/><line nr="303" mi="3" ci="0" mb="2" cb="0"/><line nr="304" mi="2" ci="0" mb="2" cb="0"/><line nr="305" mi="5" ci="0" mb="0" cb="0"/><line nr="307" mi="2" ci="0" mb="2" cb="0"/><line nr="308" mi="5" ci="0" mb="0" cb="0"/><line nr="310" mi="6" ci="0" mb="2" cb="0"/><line nr="311" mi="5" ci="0" mb="0" cb="0"/><line nr="313" mi="7" ci="0" mb="0" cb="0"/><line nr="314" mi="3" ci="0" mb="2" cb="0"/><line nr="315" mi="11" ci="0" mb="0" cb="0"/><line nr="317" mi="5" ci="0" mb="0" cb="0"/><line nr="409" mi="0" ci="2" mb="0" cb="0"/><line nr="410" mi="0" ci="10" mb="0" cb="2"/><line nr="411" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="0" ci="1" mb="0" cb="0"/><line nr="413" mi="0" ci="2" mb="0" cb="0"/><line nr="417" mi="0" ci="6" mb="0" cb="0"/><line nr="421" mi="0" ci="6" mb="0" cb="0"/><line nr="477" mi="7" ci="0" mb="0" cb="0"/><line nr="485" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="176" covered="128"/><counter type="BRANCH" missed="15" covered="13"/><counter type="LINE" missed="39" covered="32"/><counter type="COMPLEXITY" missed="24" covered="15"/><counter type="METHOD" missed="15" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="StringArraySubscriber.java"/><sourcefile name="StringArrayEntryImpl.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FloatArrayTopic.java"><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ProtobufPublisher.java"><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NetworkTableEvent.java"><line nr="15" mi="0" ci="56" mb="0" cb="0"/><line nr="20" mi="0" ci="7" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="29" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="1" ci="9" mb="1" cb="1"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="194"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="29"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TimestampedDouble.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IntegerEntry.java"/><sourcefile name="NTSendableBuilder.java"><line nr="37" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PubSubOptions.java"><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="16" ci="0" mb="2" cb="0"/><line nr="17" mi="6" ci="0" mb="10" cb="0"/><line nr="19" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="109" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TopicInfo.java"><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="2" cb="0"/><line nr="61" mi="9" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BooleanArrayTopic.java"><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StructArrayEntry.java"/><sourcefile name="FloatTopic.java"><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BooleanEntryImpl.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DoubleArrayTopic.java"><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StringSubscriber.java"/><sourcefile name="StructArrayPublisher.java"><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StructArrayTopic.java"><line nr="17" mi="6" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="2" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="2" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="14" ci="0" mb="4" cb="0"/><line nr="174" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="156" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RawSubscriber.java"/><sourcefile name="StructEntryImpl.java"><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="9" ci="0" mb="0" cb="0"/><line nr="49" mi="8" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="2" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="9" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="2" cb="0"/><line nr="81" mi="9" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="2" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="2" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="16" ci="0" mb="2" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="9" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="8" ci="0" mb="2" cb="0"/><line nr="112" mi="9" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="2" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="2" cb="0"/><line nr="121" mi="11" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="16" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="2" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="2" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="7" ci="0" mb="0" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="9" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="2" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="7" ci="0" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="9" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="2" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="7" ci="0" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="2" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="15" ci="0" mb="0" cb="0"/><line nr="197" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="7" ci="0" mb="0" cb="0"/><line nr="206" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="370" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="84" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StructTopic.java"><line nr="17" mi="6" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="6" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="6" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="2" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="2" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="14" ci="0" mb="4" cb="0"/><line nr="173" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="152" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TimestampedObject.java"><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DoubleArrayEntry.java"/><sourcefile name="EntryBase.java"><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="7" ci="0" mb="2" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="6"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StructArraySubscriber.java"/><sourcefile name="NetworkTableListener.java"><line nr="31" mi="10" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="10" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="10" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="10" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="10" ci="0" mb="0" cb="0"/><line nr="109" mi="9" ci="0" mb="0" cb="0"/><line nr="122" mi="9" ci="0" mb="0" cb="0"/><line nr="140" mi="10" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="2" cb="0"/><line nr="146" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="7" ci="0" mb="2" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StructPublisher.java"><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MultiSubscriber.java"><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="7" ci="0" mb="0" cb="0"/><line nr="22" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="2" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="2" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BooleanPublisher.java"><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StructArrayEntryImpl.java"><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="9" ci="0" mb="0" cb="0"/><line nr="50" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="9" ci="0" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="8" ci="0" mb="2" cb="0"/><line nr="70" mi="9" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="2" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="2" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="16" ci="0" mb="2" cb="0"/><line nr="83" mi="3" ci="0" mb="2" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="8" ci="0" mb="2" cb="0"/><line nr="101" mi="9" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="2" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="2" cb="0"/><line nr="110" mi="8" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="16" ci="0" mb="2" cb="0"/><line nr="113" mi="2" ci="0" mb="2" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="2" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="7" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="9" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="2" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="9" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="2" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="7" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="2" cb="0"/><line nr="180" mi="7" ci="0" mb="0" cb="0"/><line nr="183" mi="5" ci="0" mb="0" cb="0"/><line nr="184" mi="11" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="7" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="340" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="79" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ConnectionInfo.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntegerArraySubscriber.java"/><sourcefile name="StringEntryImpl.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StringArrayTopic.java"><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FloatEntry.java"/><sourcefile name="ProtobufEntryImpl.java"><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="9" ci="0" mb="0" cb="0"/><line nr="50" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="2" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="9" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="2" cb="0"/><line nr="87" mi="9" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="2" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="2" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="16" ci="0" mb="2" cb="0"/><line nr="100" mi="3" ci="0" mb="2" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="9" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="2" cb="0"/><line nr="118" mi="9" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="2" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="2" cb="0"/><line nr="127" mi="11" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="16" ci="0" mb="2" cb="0"/><line nr="130" mi="2" ci="0" mb="2" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="2" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="7" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="9" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="2" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="9" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="2" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="5" ci="0" mb="0" cb="0"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="4" ci="0" mb="2" cb="0"/><line nr="193" mi="7" ci="0" mb="0" cb="0"/><line nr="196" mi="5" ci="0" mb="0" cb="0"/><line nr="197" mi="15" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="7" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="373" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="86" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PubSub.java"/><sourcefile name="DoubleArrayPublisher.java"><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BooleanArrayEntry.java"/><sourcefile name="NetworkTableInstance.java"><line nr="47" mi="0" ci="24" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="2" cb="2"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="3" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="7" ci="0" mb="2" cb="0"/><line nr="119" mi="2" ci="0" mb="2" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="1" cb="1"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="1" cb="1"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="6" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="2" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="2" cb="0"/><line nr="181" mi="6" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="6" ci="0" mb="0" cb="0"/><line nr="187" mi="6" ci="0" mb="0" cb="0"/><line nr="190" mi="7" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="2" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="2" cb="0"/><line nr="209" mi="6" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="6" ci="0" mb="0" cb="0"/><line nr="215" mi="6" ci="0" mb="0" cb="0"/><line nr="218" mi="7" ci="0" mb="0" cb="0"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="6" ci="0" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="2" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="2" cb="0"/><line nr="237" mi="6" ci="0" mb="0" cb="0"/><line nr="239" mi="3" ci="0" mb="0" cb="0"/><line nr="242" mi="6" ci="0" mb="0" cb="0"/><line nr="243" mi="6" ci="0" mb="0" cb="0"/><line nr="246" mi="7" ci="0" mb="0" cb="0"/><line nr="248" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="1" cb="1"/><line nr="260" mi="3" ci="0" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="1" cb="1"/><line nr="265" mi="0" ci="6" mb="0" cb="0"/><line nr="267" mi="3" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="6" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="274" mi="0" ci="7" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="6" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="2" cb="0"/><line nr="288" mi="3" ci="0" mb="0" cb="0"/><line nr="292" mi="2" ci="0" mb="2" cb="0"/><line nr="293" mi="6" ci="0" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="298" mi="6" ci="0" mb="0" cb="0"/><line nr="299" mi="6" ci="0" mb="0" cb="0"/><line nr="302" mi="7" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="0" cb="0"/><line nr="314" mi="0" ci="6" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="1" cb="1"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="1" cb="1"/><line nr="321" mi="0" ci="6" mb="0" cb="0"/><line nr="323" mi="3" ci="0" mb="0" cb="0"/><line nr="326" mi="0" ci="6" mb="0" cb="0"/><line nr="327" mi="0" ci="6" mb="0" cb="0"/><line nr="330" mi="0" ci="7" mb="0" cb="0"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="342" mi="6" ci="0" mb="0" cb="0"/><line nr="343" mi="3" ci="0" mb="2" cb="0"/><line nr="344" mi="3" ci="0" mb="0" cb="0"/><line nr="348" mi="2" ci="0" mb="2" cb="0"/><line nr="349" mi="6" ci="0" mb="0" cb="0"/><line nr="351" mi="3" ci="0" mb="0" cb="0"/><line nr="354" mi="6" ci="0" mb="0" cb="0"/><line nr="355" mi="6" ci="0" mb="0" cb="0"/><line nr="358" mi="7" ci="0" mb="0" cb="0"/><line nr="360" mi="2" ci="0" mb="0" cb="0"/><line nr="370" mi="6" ci="0" mb="0" cb="0"/><line nr="371" mi="3" ci="0" mb="2" cb="0"/><line nr="372" mi="3" ci="0" mb="0" cb="0"/><line nr="376" mi="2" ci="0" mb="2" cb="0"/><line nr="377" mi="6" ci="0" mb="0" cb="0"/><line nr="379" mi="3" ci="0" mb="0" cb="0"/><line nr="382" mi="6" ci="0" mb="0" cb="0"/><line nr="383" mi="6" ci="0" mb="0" cb="0"/><line nr="386" mi="7" ci="0" mb="0" cb="0"/><line nr="388" mi="2" ci="0" mb="0" cb="0"/><line nr="398" mi="6" ci="0" mb="0" cb="0"/><line nr="399" mi="3" ci="0" mb="2" cb="0"/><line nr="400" mi="3" ci="0" mb="0" cb="0"/><line nr="404" mi="2" ci="0" mb="2" cb="0"/><line nr="405" mi="6" ci="0" mb="0" cb="0"/><line nr="407" mi="3" ci="0" mb="0" cb="0"/><line nr="410" mi="6" ci="0" mb="0" cb="0"/><line nr="411" mi="6" ci="0" mb="0" cb="0"/><line nr="414" mi="7" ci="0" mb="0" cb="0"/><line nr="416" mi="2" ci="0" mb="0" cb="0"/><line nr="426" mi="6" ci="0" mb="0" cb="0"/><line nr="427" mi="3" ci="0" mb="2" cb="0"/><line nr="428" mi="3" ci="0" mb="0" cb="0"/><line nr="432" mi="2" ci="0" mb="2" cb="0"/><line nr="433" mi="6" ci="0" mb="0" cb="0"/><line nr="435" mi="3" ci="0" mb="0" cb="0"/><line nr="438" mi="6" ci="0" mb="0" cb="0"/><line nr="439" mi="6" ci="0" mb="0" cb="0"/><line nr="442" mi="7" ci="0" mb="0" cb="0"/><line nr="444" mi="2" ci="0" mb="0" cb="0"/><line nr="454" mi="6" ci="0" mb="0" cb="0"/><line nr="455" mi="3" ci="0" mb="2" cb="0"/><line nr="456" mi="3" ci="0" mb="0" cb="0"/><line nr="460" mi="2" ci="0" mb="2" cb="0"/><line nr="461" mi="6" ci="0" mb="0" cb="0"/><line nr="463" mi="3" ci="0" mb="0" cb="0"/><line nr="466" mi="6" ci="0" mb="0" cb="0"/><line nr="467" mi="6" ci="0" mb="0" cb="0"/><line nr="470" mi="7" ci="0" mb="0" cb="0"/><line nr="472" mi="2" ci="0" mb="0" cb="0"/><line nr="487" mi="6" ci="0" mb="0" cb="0"/><line nr="488" mi="5" ci="0" mb="2" cb="0"/><line nr="489" mi="4" ci="0" mb="2" cb="0"/><line nr="491" mi="3" ci="0" mb="0" cb="0"/><line nr="492" mi="2" ci="0" mb="0" cb="0"/><line nr="496" mi="2" ci="0" mb="2" cb="0"/><line nr="497" mi="6" ci="0" mb="0" cb="0"/><line nr="499" mi="3" ci="0" mb="0" cb="0"/><line nr="502" mi="5" ci="0" mb="0" cb="0"/><line nr="503" mi="6" ci="0" mb="0" cb="0"/><line nr="506" mi="7" ci="0" mb="0" cb="0"/><line nr="508" mi="2" ci="0" mb="0" cb="0"/><line nr="521" mi="6" ci="0" mb="0" cb="0"/><line nr="522" mi="5" ci="0" mb="2" cb="0"/><line nr="523" mi="4" ci="0" mb="2" cb="0"/><line nr="525" mi="3" ci="0" mb="0" cb="0"/><line nr="526" mi="2" ci="0" mb="0" cb="0"/><line nr="530" mi="2" ci="0" mb="2" cb="0"/><line nr="531" mi="6" ci="0" mb="0" cb="0"/><line nr="533" mi="3" ci="0" mb="0" cb="0"/><line nr="536" mi="5" ci="0" mb="0" cb="0"/><line nr="537" mi="6" ci="0" mb="0" cb="0"/><line nr="540" mi="7" ci="0" mb="0" cb="0"/><line nr="542" mi="2" ci="0" mb="0" cb="0"/><line nr="555" mi="6" ci="0" mb="0" cb="0"/><line nr="556" mi="5" ci="0" mb="2" cb="0"/><line nr="557" mi="4" ci="0" mb="2" cb="0"/><line nr="559" mi="3" ci="0" mb="0" cb="0"/><line nr="560" mi="2" ci="0" mb="0" cb="0"/><line nr="564" mi="2" ci="0" mb="2" cb="0"/><line nr="565" mi="6" ci="0" mb="0" cb="0"/><line nr="567" mi="3" ci="0" mb="0" cb="0"/><line nr="570" mi="5" ci="0" mb="0" cb="0"/><line nr="571" mi="6" ci="0" mb="0" cb="0"/><line nr="574" mi="7" ci="0" mb="0" cb="0"/><line nr="576" mi="2" ci="0" mb="0" cb="0"/><line nr="580" mi="4" ci="0" mb="0" cb="0"/><line nr="581" mi="8" ci="0" mb="2" cb="0"/><line nr="582" mi="8" ci="0" mb="0" cb="0"/><line nr="584" mi="2" ci="0" mb="0" cb="0"/><line nr="593" mi="8" ci="0" mb="0" cb="0"/><line nr="605" mi="8" ci="0" mb="0" cb="0"/><line nr="618" mi="8" ci="0" mb="0" cb="0"/><line nr="631" mi="8" ci="0" mb="0" cb="0"/><line nr="640" mi="7" ci="0" mb="0" cb="0"/><line nr="652" mi="7" ci="0" mb="0" cb="0"/><line nr="665" mi="7" ci="0" mb="0" cb="0"/><line nr="678" mi="7" ci="0" mb="0" cb="0"/><line nr="682" mi="0" ci="5" mb="0" cb="0"/><line nr="691" mi="6" ci="0" mb="0" cb="0"/><line nr="692" mi="2" ci="0" mb="2" cb="0"/><line nr="693" mi="9" ci="0" mb="0" cb="0"/><line nr="694" mi="7" ci="0" mb="0" cb="0"/><line nr="695" mi="2" ci="0" mb="2" cb="0"/><line nr="696" mi="2" ci="0" mb="0" cb="0"/><line nr="699" mi="2" ci="0" mb="0" cb="0"/><line nr="703" mi="0" ci="5" mb="0" cb="0"/><line nr="704" mi="0" ci="5" mb="0" cb="0"/><line nr="707" mi="6" ci="0" mb="0" cb="0"/><line nr="708" mi="2" ci="0" mb="2" cb="0"/><line nr="709" mi="5" ci="0" mb="0" cb="0"/><line nr="710" mi="6" ci="0" mb="0" cb="0"/><line nr="711" mi="7" ci="0" mb="0" cb="0"/><line nr="712" mi="2" ci="0" mb="2" cb="0"/><line nr="713" mi="2" ci="0" mb="0" cb="0"/><line nr="716" mi="7" ci="0" mb="0" cb="0"/><line nr="718" mi="2" ci="0" mb="0" cb="0"/><line nr="722" mi="7" ci="0" mb="0" cb="0"/><line nr="723" mi="2" ci="0" mb="2" cb="0"/><line nr="724" mi="6" ci="0" mb="0" cb="0"/><line nr="725" mi="8" ci="0" mb="0" cb="0"/><line nr="726" mi="2" ci="0" mb="2" cb="0"/><line nr="727" mi="2" ci="0" mb="0" cb="0"/><line nr="730" mi="2" ci="0" mb="0" cb="0"/><line nr="734" mi="0" ci="5" mb="0" cb="0"/><line nr="745" mi="0" ci="7" mb="2" cb="2"/><line nr="746" mi="3" ci="0" mb="0" cb="0"/><line nr="747" mi="0" ci="5" mb="1" cb="1"/><line nr="748" mi="0" ci="3" mb="0" cb="0"/><line nr="750" mi="3" ci="0" mb="0" cb="0"/><line nr="754" mi="0" ci="6" mb="0" cb="0"/><line nr="755" mi="0" ci="2" mb="1" cb="1"/><line nr="756" mi="0" ci="6" mb="0" cb="0"/><line nr="757" mi="0" ci="7" mb="0" cb="0"/><line nr="758" mi="0" ci="2" mb="1" cb="1"/><line nr="759" mi="2" ci="0" mb="0" cb="0"/><line nr="762" mi="0" ci="2" mb="0" cb="0"/><line nr="770" mi="0" ci="5" mb="0" cb="0"/><line nr="771" mi="0" ci="5" mb="0" cb="0"/><line nr="775" mi="0" ci="5" mb="0" cb="0"/><line nr="776" mi="0" ci="5" mb="0" cb="0"/><line nr="779" mi="0" ci="2" mb="0" cb="0"/><line nr="780" mi="0" ci="3" mb="0" cb="0"/><line nr="781" mi="0" ci="1" mb="0" cb="0"/><line nr="787" mi="0" ci="3" mb="0" cb="0"/><line nr="789" mi="0" ci="3" mb="1" cb="1"/><line nr="790" mi="0" ci="6" mb="0" cb="0"/><line nr="791" mi="0" ci="2" mb="0" cb="0"/><line nr="793" mi="0" ci="6" mb="0" cb="0"/><line nr="794" mi="0" ci="7" mb="0" cb="0"/><line nr="795" mi="0" ci="4" mb="0" cb="0"/><line nr="797" mi="0" ci="3" mb="0" cb="0"/><line nr="805" mi="0" ci="3" mb="0" cb="0"/><line nr="807" mi="0" ci="3" mb="1" cb="1"/><line nr="808" mi="0" ci="6" mb="0" cb="0"/><line nr="809" mi="0" ci="2" mb="0" cb="0"/><line nr="811" mi="0" ci="6" mb="0" cb="0"/><line nr="812" mi="0" ci="7" mb="0" cb="0"/><line nr="813" mi="0" ci="4" mb="0" cb="0"/><line nr="815" mi="0" ci="3" mb="0" cb="0"/><line nr="820" mi="0" ci="3" mb="0" cb="0"/><line nr="822" mi="0" ci="3" mb="1" cb="1"/><line nr="823" mi="0" ci="6" mb="0" cb="0"/><line nr="824" mi="0" ci="2" mb="0" cb="0"/><line nr="826" mi="0" ci="6" mb="0" cb="0"/><line nr="827" mi="0" ci="7" mb="0" cb="0"/><line nr="828" mi="0" ci="4" mb="0" cb="0"/><line nr="830" mi="0" ci="3" mb="0" cb="0"/><line nr="835" mi="3" ci="0" mb="0" cb="0"/><line nr="837" mi="6" ci="0" mb="0" cb="0"/><line nr="839" mi="3" ci="0" mb="0" cb="0"/><line nr="841" mi="2" ci="0" mb="0" cb="0"/><line nr="842" mi="1" ci="0" mb="0" cb="0"/><line nr="846" mi="0" ci="3" mb="0" cb="2"/><line nr="847" mi="0" ci="3" mb="0" cb="0"/><line nr="849" mi="0" ci="3" mb="0" cb="0"/><line nr="850" mi="0" ci="1" mb="0" cb="0"/><line nr="853" mi="0" ci="8" mb="0" cb="0"/><line nr="856" mi="0" ci="2" mb="0" cb="0"/><line nr="857" mi="0" ci="14" mb="0" cb="0"/><line nr="858" mi="0" ci="2" mb="1" cb="1"/><line nr="860" mi="0" ci="3" mb="0" cb="0"/><line nr="861" mi="1" ci="0" mb="0" cb="0"/><line nr="862" mi="3" ci="0" mb="0" cb="0"/><line nr="864" mi="3" ci="0" mb="2" cb="0"/><line nr="865" mi="3" ci="0" mb="0" cb="0"/><line nr="866" mi="3" ci="0" mb="0" cb="0"/><line nr="869" mi="3" ci="0" mb="0" cb="0"/><line nr="871" mi="2" ci="0" mb="0" cb="0"/><line nr="873" mi="2" ci="0" mb="0" cb="0"/><line nr="874" mi="1" ci="0" mb="0" cb="0"/><line nr="875" mi="0" ci="1" mb="0" cb="0"/><line nr="877" mi="0" ci="20" mb="0" cb="2"/><line nr="879" mi="0" ci="3" mb="0" cb="0"/><line nr="881" mi="0" ci="8" mb="0" cb="0"/><line nr="883" mi="0" ci="3" mb="0" cb="0"/><line nr="885" mi="0" ci="2" mb="1" cb="1"/><line nr="887" mi="0" ci="3" mb="0" cb="0"/><line nr="888" mi="1" ci="0" mb="0" cb="0"/><line nr="889" mi="3" ci="0" mb="0" cb="0"/><line nr="891" mi="2" ci="0" mb="0" cb="0"/><line nr="892" mi="2" ci="0" mb="0" cb="0"/><line nr="893" mi="0" ci="1" mb="0" cb="0"/><line nr="896" mi="0" ci="3" mb="0" cb="0"/><line nr="898" mi="0" ci="3" mb="0" cb="2"/><line nr="899" mi="0" ci="3" mb="0" cb="0"/><line nr="900" mi="0" ci="3" mb="0" cb="0"/><line nr="903" mi="0" ci="3" mb="0" cb="0"/><line nr="904" mi="0" ci="1" mb="0" cb="0"/><line nr="906" mi="3" ci="0" mb="0" cb="0"/><line nr="908" mi="2" ci="0" mb="2" cb="0"/><line nr="909" mi="3" ci="0" mb="0" cb="0"/><line nr="911" mi="3" ci="0" mb="0" cb="0"/><line nr="913" mi="3" ci="0" mb="0" cb="0"/><line nr="915" mi="1" ci="0" mb="0" cb="0"/><line nr="917" mi="0" ci="4" mb="0" cb="0"/><line nr="918" mi="0" ci="3" mb="0" cb="0"/><line nr="919" mi="0" ci="1" mb="0" cb="0"/><line nr="922" mi="0" ci="3" mb="0" cb="0"/><line nr="924" mi="0" ci="3" mb="1" cb="1"/><line nr="925" mi="0" ci="3" mb="0" cb="0"/><line nr="926" mi="0" ci="3" mb="0" cb="0"/><line nr="927" mi="0" ci="3" mb="1" cb="1"/><line nr="929" mi="0" ci="4" mb="1" cb="1"/><line nr="930" mi="4" ci="0" mb="0" cb="0"/><line nr="932" mi="0" ci="11" mb="0" cb="0"/><line nr="934" mi="1" ci="0" mb="0" cb="0"/><line nr="935" mi="2" ci="0" mb="0" cb="0"/><line nr="936" mi="4" ci="0" mb="0" cb="0"/><line nr="937" mi="1" ci="0" mb="0" cb="0"/><line nr="941" mi="0" ci="3" mb="0" cb="0"/><line nr="943" mi="2" ci="0" mb="0" cb="0"/><line nr="947" mi="0" ci="6" mb="0" cb="0"/><line nr="955" mi="4" ci="0" mb="0" cb="0"/><line nr="956" mi="1" ci="0" mb="0" cb="0"/><line nr="968" mi="0" ci="5" mb="0" cb="0"/><line nr="982" mi="0" ci="3" mb="0" cb="0"/><line nr="983" mi="0" ci="2" mb="1" cb="1"/><line nr="984" mi="4" ci="0" mb="0" cb="0"/><line nr="986" mi="0" ci="8" mb="0" cb="0"/><line nr="1000" mi="3" ci="0" mb="0" cb="0"/><line nr="1001" mi="2" ci="0" mb="2" cb="0"/><line nr="1002" mi="4" ci="0" mb="0" cb="0"/><line nr="1004" mi="8" ci="0" mb="0" cb="0"/><line nr="1024" mi="6" ci="0" mb="2" cb="0"/><line nr="1025" mi="5" ci="0" mb="0" cb="0"/><line nr="1027" mi="8" ci="0" mb="0" cb="0"/><line nr="1045" mi="7" ci="0" mb="2" cb="0"/><line nr="1046" mi="5" ci="0" mb="0" cb="0"/><line nr="1048" mi="8" ci="0" mb="0" cb="0"/><line nr="1066" mi="6" ci="0" mb="2" cb="0"/><line nr="1067" mi="5" ci="0" mb="0" cb="0"/><line nr="1069" mi="8" ci="0" mb="0" cb="0"/><line nr="1086" mi="7" ci="0" mb="2" cb="0"/><line nr="1087" mi="5" ci="0" mb="0" cb="0"/><line nr="1089" mi="8" ci="0" mb="0" cb="0"/><line nr="1110" mi="0" ci="7" mb="0" cb="0"/><line nr="1123" mi="0" ci="4" mb="0" cb="0"/><line nr="1124" mi="0" ci="3" mb="0" cb="0"/><line nr="1125" mi="0" ci="16" mb="0" cb="2"/><line nr="1126" mi="0" ci="5" mb="0" cb="2"/><line nr="1127" mi="0" ci="4" mb="0" cb="0"/><line nr="1130" mi="0" ci="2" mb="0" cb="0"/><line nr="1138" mi="3" ci="0" mb="0" cb="0"/><line nr="1139" mi="1" ci="0" mb="0" cb="0"/><line nr="1146" mi="3" ci="0" mb="0" cb="0"/><line nr="1147" mi="1" ci="0" mb="0" cb="0"/><line nr="1154" mi="3" ci="0" mb="0" cb="0"/><line nr="1155" mi="1" ci="0" mb="0" cb="0"/><line nr="1164" mi="4" ci="0" mb="0" cb="0"/><line nr="1165" mi="1" ci="0" mb="0" cb="0"/><line nr="1174" mi="6" ci="0" mb="0" cb="0"/><line nr="1175" mi="1" ci="0" mb="0" cb="0"/><line nr="1185" mi="6" ci="0" mb="0" cb="0"/><line nr="1186" mi="1" ci="0" mb="0" cb="0"/><line nr="1197" mi="0" ci="7" mb="0" cb="0"/><line nr="1198" mi="0" ci="1" mb="0" cb="0"/><line nr="1202" mi="0" ci="3" mb="0" cb="0"/><line nr="1203" mi="0" ci="1" mb="0" cb="0"/><line nr="1211" mi="0" ci="4" mb="0" cb="0"/><line nr="1212" mi="0" ci="1" mb="0" cb="0"/><line nr="1220" mi="0" ci="4" mb="0" cb="0"/><line nr="1221" mi="0" ci="1" mb="0" cb="0"/><line nr="1225" mi="0" ci="3" mb="0" cb="0"/><line nr="1226" mi="0" ci="1" mb="0" cb="0"/><line nr="1235" mi="4" ci="0" mb="0" cb="0"/><line nr="1236" mi="1" ci="0" mb="0" cb="0"/><line nr="1245" mi="0" ci="5" mb="0" cb="0"/><line nr="1246" mi="0" ci="1" mb="0" cb="0"/><line nr="1255" mi="4" ci="0" mb="0" cb="0"/><line nr="1256" mi="1" ci="0" mb="0" cb="0"/><line nr="1266" mi="4" ci="0" mb="0" cb="0"/><line nr="1267" mi="8" ci="0" mb="2" cb="0"/><line nr="1268" mi="4" ci="0" mb="0" cb="0"/><line nr="1270" mi="4" ci="0" mb="0" cb="0"/><line nr="1271" mi="1" ci="0" mb="0" cb="0"/><line nr="1281" mi="5" ci="0" mb="0" cb="0"/><line nr="1282" mi="1" ci="0" mb="0" cb="0"/><line nr="1291" mi="4" ci="0" mb="0" cb="0"/><line nr="1292" mi="1" ci="0" mb="0" cb="0"/><line nr="1302" mi="5" ci="0" mb="0" cb="0"/><line nr="1303" mi="1" ci="0" mb="0" cb="0"/><line nr="1310" mi="3" ci="0" mb="0" cb="0"/><line nr="1311" mi="1" ci="0" mb="0" cb="0"/><line nr="1318" mi="3" ci="0" mb="0" cb="0"/><line nr="1319" mi="1" ci="0" mb="0" cb="0"/><line nr="1328" mi="4" ci="0" mb="0" cb="0"/><line nr="1329" mi="1" ci="0" mb="0" cb="0"/><line nr="1333" mi="3" ci="0" mb="0" cb="0"/><line nr="1334" mi="1" ci="0" mb="0" cb="0"/><line nr="1341" mi="3" ci="0" mb="0" cb="0"/><line nr="1342" mi="1" ci="0" mb="0" cb="0"/><line nr="1350" mi="3" ci="0" mb="0" cb="0"/><line nr="1351" mi="1" ci="0" mb="0" cb="0"/><line nr="1360" mi="4" ci="0" mb="0" cb="0"/><line nr="1369" mi="0" ci="4" mb="0" cb="0"/><line nr="1382" mi="0" ci="4" mb="0" cb="0"/><line nr="1396" mi="7" ci="0" mb="0" cb="0"/><line nr="1405" mi="2" ci="0" mb="0" cb="0"/><line nr="1406" mi="1" ci="0" mb="0" cb="0"/><line nr="1417" mi="6" ci="0" mb="0" cb="0"/><line nr="1426" mi="2" ci="0" mb="0" cb="0"/><line nr="1427" mi="1" ci="0" mb="0" cb="0"/><line nr="1441" mi="0" ci="7" mb="0" cb="0"/><line nr="1453" mi="6" ci="0" mb="0" cb="0"/><line nr="1468" mi="10" ci="0" mb="0" cb="0"/><line nr="1469" mi="9" ci="0" mb="0" cb="0"/><line nr="1470" mi="3" ci="0" mb="0" cb="0"/><line nr="1471" mi="2" ci="0" mb="0" cb="0"/><line nr="1473" mi="1" ci="0" mb="0" cb="0"/><line nr="1487" mi="10" ci="0" mb="0" cb="0"/><line nr="1488" mi="9" ci="0" mb="0" cb="0"/><line nr="1489" mi="5" ci="0" mb="0" cb="0"/><line nr="1490" mi="2" ci="0" mb="0" cb="0"/><line nr="1492" mi="1" ci="0" mb="0" cb="0"/><line nr="1501" mi="6" ci="0" mb="0" cb="0"/><line nr="1503" mi="6" ci="0" mb="0" cb="0"/><line nr="1504" mi="1" ci="0" mb="0" cb="0"/><line nr="1513" mi="6" ci="0" mb="0" cb="0"/><line nr="1514" mi="1" ci="0" mb="0" cb="0"/><line nr="1518" mi="3" ci="0" mb="2" cb="0"/><line nr="1519" mi="2" ci="0" mb="0" cb="0"/><line nr="1521" mi="3" ci="0" mb="2" cb="0"/><line nr="1522" mi="2" ci="0" mb="0" cb="0"/><line nr="1525" mi="10" ci="0" mb="2" cb="0"/><line nr="1530" mi="3" ci="0" mb="0" cb="0"/><line nr="1534" mi="3" ci="0" mb="0" cb="0"/><line nr="1535" mi="4" ci="0" mb="2" cb="0"/><line nr="1536" mi="1" ci="0" mb="0" cb="0"/><line nr="1538" mi="4" ci="0" mb="2" cb="0"/><line nr="1539" mi="7" ci="0" mb="0" cb="0"/><line nr="1541" mi="6" ci="0" mb="0" cb="0"/><line nr="1542" mi="17" ci="0" mb="2" cb="0"/><line nr="1543" mi="4" ci="0" mb="0" cb="0"/><line nr="1545" mi="4" ci="0" mb="0" cb="0"/><line nr="1546" mi="1" ci="0" mb="0" cb="0"/><line nr="1550" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1226" covered="667"/><counter type="BRANCH" missed="122" covered="32"/><counter type="LINE" missed="300" covered="154"/><counter type="COMPLEXITY" missed="140" covered="37"/><counter type="METHOD" missed="68" covered="32"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="StructEntry.java"/><sourcefile name="ValueEventData.java"><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="2" cb="0"/><line nr="50" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StringArrayEntry.java"/><sourcefile name="FloatArrayPublisher.java"><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NetworkTableValue.java"><line nr="12" mi="2" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="20" mi="12" ci="0" mb="2" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="24" mi="6" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="7" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="2" cb="0"/><line nr="86" mi="8" ci="0" mb="2" cb="0"/><line nr="95" mi="8" ci="0" mb="2" cb="0"/><line nr="104" mi="8" ci="0" mb="2" cb="0"/><line nr="113" mi="8" ci="0" mb="2" cb="0"/><line nr="122" mi="8" ci="0" mb="2" cb="0"/><line nr="131" mi="8" ci="0" mb="2" cb="0"/><line nr="140" mi="8" ci="0" mb="2" cb="0"/><line nr="149" mi="8" ci="0" mb="2" cb="0"/><line nr="158" mi="8" ci="0" mb="2" cb="0"/><line nr="167" mi="8" ci="0" mb="2" cb="0"/><line nr="176" mi="8" ci="0" mb="2" cb="0"/><line nr="190" mi="4" ci="0" mb="2" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="193" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="2" cb="0"/><line nr="204" mi="7" ci="0" mb="0" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="216" mi="4" ci="0" mb="2" cb="0"/><line nr="217" mi="7" ci="0" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="2" cb="0"/><line nr="230" mi="7" ci="0" mb="0" cb="0"/><line nr="232" mi="5" ci="0" mb="0" cb="0"/><line nr="242" mi="4" ci="0" mb="2" cb="0"/><line nr="243" mi="7" ci="0" mb="0" cb="0"/><line nr="245" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="4" ci="0" mb="2" cb="0"/><line nr="256" mi="7" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="268" mi="4" ci="0" mb="2" cb="0"/><line nr="269" mi="7" ci="0" mb="0" cb="0"/><line nr="271" mi="4" ci="0" mb="0" cb="0"/><line nr="281" mi="4" ci="0" mb="2" cb="0"/><line nr="282" mi="7" ci="0" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="294" mi="4" ci="0" mb="2" cb="0"/><line nr="295" mi="7" ci="0" mb="0" cb="0"/><line nr="297" mi="4" ci="0" mb="0" cb="0"/><line nr="307" mi="4" ci="0" mb="2" cb="0"/><line nr="308" mi="7" ci="0" mb="0" cb="0"/><line nr="310" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="4" ci="0" mb="2" cb="0"/><line nr="321" mi="7" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="7" ci="0" mb="0" cb="0"/><line nr="348" mi="8" ci="0" mb="0" cb="0"/><line nr="358" mi="7" ci="0" mb="0" cb="0"/><line nr="369" mi="8" ci="0" mb="0" cb="0"/><line nr="379" mi="7" ci="0" mb="0" cb="0"/><line nr="390" mi="8" ci="0" mb="0" cb="0"/><line nr="400" mi="7" ci="0" mb="0" cb="0"/><line nr="411" mi="8" ci="0" mb="0" cb="0"/><line nr="421" mi="6" ci="0" mb="0" cb="0"/><line nr="432" mi="7" ci="0" mb="0" cb="0"/><line nr="442" mi="6" ci="0" mb="0" cb="0"/><line nr="453" mi="7" ci="0" mb="0" cb="0"/><line nr="463" mi="6" ci="0" mb="0" cb="0"/><line nr="474" mi="7" ci="0" mb="0" cb="0"/><line nr="484" mi="7" ci="0" mb="0" cb="0"/><line nr="495" mi="8" ci="0" mb="0" cb="0"/><line nr="505" mi="6" ci="0" mb="0" cb="0"/><line nr="516" mi="7" ci="0" mb="0" cb="0"/><line nr="526" mi="7" ci="0" mb="0" cb="0"/><line nr="537" mi="8" ci="0" mb="0" cb="0"/><line nr="547" mi="6" ci="0" mb="0" cb="0"/><line nr="558" mi="7" ci="0" mb="0" cb="0"/><line nr="568" mi="7" ci="0" mb="0" cb="0"/><line nr="579" mi="8" ci="0" mb="0" cb="0"/><line nr="589" mi="6" ci="0" mb="0" cb="0"/><line nr="600" mi="7" ci="0" mb="0" cb="0"/><line nr="610" mi="7" ci="0" mb="0" cb="0"/><line nr="621" mi="8" ci="0" mb="0" cb="0"/><line nr="631" mi="6" ci="0" mb="0" cb="0"/><line nr="642" mi="7" ci="0" mb="0" cb="0"/><line nr="647" mi="3" ci="0" mb="2" cb="0"/><line nr="648" mi="2" ci="0" mb="0" cb="0"/><line nr="650" mi="3" ci="0" mb="2" cb="0"/><line nr="651" mi="2" ci="0" mb="0" cb="0"/><line nr="653" mi="3" ci="0" mb="0" cb="0"/><line nr="654" mi="15" ci="0" mb="4" cb="0"/><line nr="659" mi="14" ci="0" mb="0" cb="0"/><line nr="666" mi="4" ci="0" mb="0" cb="0"/><line nr="667" mi="8" ci="0" mb="2" cb="0"/><line nr="668" mi="7" ci="0" mb="0" cb="0"/><line nr="670" mi="2" ci="0" mb="0" cb="0"/><line nr="675" mi="4" ci="0" mb="0" cb="0"/><line nr="676" mi="8" ci="0" mb="2" cb="0"/><line nr="677" mi="7" ci="0" mb="0" cb="0"/><line nr="679" mi="2" ci="0" mb="0" cb="0"/><line nr="684" mi="4" ci="0" mb="0" cb="0"/><line nr="685" mi="8" ci="0" mb="2" cb="0"/><line nr="686" mi="7" ci="0" mb="0" cb="0"/><line nr="688" mi="2" ci="0" mb="0" cb="0"/><line nr="693" mi="4" ci="0" mb="0" cb="0"/><line nr="694" mi="8" ci="0" mb="2" cb="0"/><line nr="695" mi="7" ci="0" mb="0" cb="0"/><line nr="697" mi="2" ci="0" mb="0" cb="0"/><line nr="702" mi="4" ci="0" mb="0" cb="0"/><line nr="703" mi="8" ci="0" mb="2" cb="0"/><line nr="704" mi="7" ci="0" mb="0" cb="0"/><line nr="706" mi="2" ci="0" mb="0" cb="0"/><line nr="711" mi="4" ci="0" mb="0" cb="0"/><line nr="712" mi="8" ci="0" mb="2" cb="0"/><line nr="713" mi="7" ci="0" mb="0" cb="0"/><line nr="715" mi="2" ci="0" mb="0" cb="0"/><line nr="720" mi="4" ci="0" mb="0" cb="0"/><line nr="721" mi="8" ci="0" mb="2" cb="0"/><line nr="722" mi="7" ci="0" mb="0" cb="0"/><line nr="724" mi="2" ci="0" mb="0" cb="0"/><line nr="729" mi="4" ci="0" mb="0" cb="0"/><line nr="730" mi="8" ci="0" mb="2" cb="0"/><line nr="731" mi="7" ci="0" mb="0" cb="0"/><line nr="733" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="741" covered="0"/><counter type="BRANCH" missed="72" covered="0"/><counter type="LINE" missed="130" covered="0"/><counter type="COMPLEXITY" missed="107" covered="0"/><counter type="METHOD" missed="71" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FloatArraySubscriber.java"/><sourcefile name="NetworkTableEntry.java"><line nr="31" mi="9" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="7" ci="0" mb="2" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="2" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="187" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="5" ci="0" mb="0" cb="0"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="5" ci="0" mb="0" cb="0"/><line nr="254" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="289" mi="5" ci="0" mb="0" cb="0"/><line nr="300" mi="4" ci="0" mb="0" cb="0"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="6" ci="0" mb="0" cb="0"/><line nr="334" mi="4" ci="0" mb="0" cb="0"/><line nr="335" mi="2" ci="0" mb="0" cb="0"/><line nr="348" mi="4" ci="0" mb="0" cb="0"/><line nr="358" mi="49" ci="0" mb="30" cb="0"/><line nr="383" mi="3" ci="0" mb="2" cb="0"/><line nr="384" mi="4" ci="0" mb="0" cb="0"/><line nr="385" mi="4" ci="0" mb="0" cb="0"/><line nr="386" mi="7" ci="0" mb="12" cb="0"/><line nr="388" mi="8" ci="0" mb="0" cb="0"/><line nr="390" mi="7" ci="0" mb="0" cb="0"/><line nr="391" mi="1" ci="0" mb="0" cb="0"/><line nr="393" mi="7" ci="0" mb="0" cb="0"/><line nr="394" mi="1" ci="0" mb="0" cb="0"/><line nr="396" mi="7" ci="0" mb="0" cb="0"/><line nr="397" mi="1" ci="0" mb="0" cb="0"/><line nr="399" mi="7" ci="0" mb="0" cb="0"/><line nr="401" mi="7" ci="0" mb="0" cb="0"/><line nr="403" mi="7" ci="0" mb="0" cb="0"/><line nr="405" mi="7" ci="0" mb="0" cb="0"/><line nr="407" mi="7" ci="0" mb="0" cb="0"/><line nr="409" mi="7" ci="0" mb="0" cb="0"/><line nr="411" mi="7" ci="0" mb="0" cb="0"/><line nr="413" mi="2" ci="0" mb="0" cb="0"/><line nr="415" mi="3" ci="0" mb="2" cb="0"/><line nr="416" mi="6" ci="0" mb="0" cb="0"/><line nr="417" mi="3" ci="0" mb="2" cb="0"/><line nr="418" mi="7" ci="0" mb="0" cb="0"/><line nr="419" mi="3" ci="0" mb="2" cb="0"/><line nr="420" mi="6" ci="0" mb="0" cb="0"/><line nr="421" mi="3" ci="0" mb="2" cb="0"/><line nr="422" mi="5" ci="0" mb="0" cb="0"/><line nr="423" mi="3" ci="0" mb="2" cb="0"/><line nr="424" mi="5" ci="0" mb="0" cb="0"/><line nr="425" mi="3" ci="0" mb="2" cb="0"/><line nr="426" mi="5" ci="0" mb="0" cb="0"/><line nr="427" mi="3" ci="0" mb="2" cb="0"/><line nr="428" mi="5" ci="0" mb="0" cb="0"/><line nr="429" mi="3" ci="0" mb="2" cb="0"/><line nr="430" mi="5" ci="0" mb="0" cb="0"/><line nr="431" mi="3" ci="0" mb="2" cb="0"/><line nr="432" mi="5" ci="0" mb="0" cb="0"/><line nr="433" mi="3" ci="0" mb="2" cb="0"/><line nr="434" mi="5" ci="0" mb="0" cb="0"/><line nr="435" mi="3" ci="0" mb="2" cb="0"/><line nr="436" mi="5" ci="0" mb="0" cb="0"/><line nr="437" mi="3" ci="0" mb="2" cb="0"/><line nr="438" mi="5" ci="0" mb="0" cb="0"/><line nr="439" mi="3" ci="0" mb="2" cb="0"/><line nr="440" mi="5" ci="0" mb="0" cb="0"/><line nr="441" mi="3" ci="0" mb="2" cb="0"/><line nr="442" mi="5" ci="0" mb="0" cb="0"/><line nr="443" mi="3" ci="0" mb="2" cb="0"/><line nr="444" mi="5" ci="0" mb="0" cb="0"/><line nr="446" mi="3" ci="0" mb="0" cb="0"/><line nr="447" mi="5" ci="0" mb="0" cb="0"/><line nr="458" mi="6" ci="0" mb="0" cb="0"/><line nr="468" mi="6" ci="0" mb="0" cb="0"/><line nr="478" mi="6" ci="0" mb="0" cb="0"/><line nr="488" mi="6" ci="0" mb="0" cb="0"/><line nr="498" mi="6" ci="0" mb="0" cb="0"/><line nr="508" mi="6" ci="0" mb="0" cb="0"/><line nr="519" mi="6" ci="0" mb="0" cb="0"/><line nr="531" mi="8" ci="0" mb="0" cb="0"/><line nr="543" mi="8" ci="0" mb="0" cb="0"/><line nr="553" mi="6" ci="0" mb="0" cb="0"/><line nr="563" mi="5" ci="0" mb="0" cb="0"/><line nr="573" mi="6" ci="0" mb="0" cb="0"/><line nr="583" mi="5" ci="0" mb="0" cb="0"/><line nr="593" mi="6" ci="0" mb="0" cb="0"/><line nr="603" mi="5" ci="0" mb="0" cb="0"/><line nr="613" mi="6" ci="0" mb="0" cb="0"/><line nr="623" mi="5" ci="0" mb="0" cb="0"/><line nr="633" mi="6" ci="0" mb="0" cb="0"/><line nr="643" mi="5" ci="0" mb="0" cb="0"/><line nr="653" mi="5" ci="0" mb="0" cb="0"/><line nr="664" mi="3" ci="0" mb="2" cb="0"/><line nr="665" mi="4" ci="0" mb="0" cb="0"/><line nr="666" mi="4" ci="0" mb="0" cb="0"/><line nr="667" mi="7" ci="0" mb="12" cb="0"/><line nr="669" mi="8" ci="0" mb="0" cb="0"/><line nr="671" mi="7" ci="0" mb="0" cb="0"/><line nr="672" mi="1" ci="0" mb="0" cb="0"/><line nr="674" mi="7" ci="0" mb="0" cb="0"/><line nr="675" mi="1" ci="0" mb="0" cb="0"/><line nr="677" mi="7" ci="0" mb="0" cb="0"/><line nr="678" mi="1" ci="0" mb="0" cb="0"/><line nr="680" mi="7" ci="0" mb="0" cb="0"/><line nr="682" mi="7" ci="0" mb="0" cb="0"/><line nr="684" mi="7" ci="0" mb="0" cb="0"/><line nr="686" mi="7" ci="0" mb="0" cb="0"/><line nr="688" mi="7" ci="0" mb="0" cb="0"/><line nr="690" mi="7" ci="0" mb="0" cb="0"/><line nr="692" mi="7" ci="0" mb="0" cb="0"/><line nr="694" mi="2" ci="0" mb="0" cb="0"/><line nr="696" mi="3" ci="0" mb="2" cb="0"/><line nr="697" mi="6" ci="0" mb="0" cb="0"/><line nr="698" mi="3" ci="0" mb="2" cb="0"/><line nr="699" mi="6" ci="0" mb="0" cb="0"/><line nr="700" mi="3" ci="0" mb="2" cb="0"/><line nr="701" mi="6" ci="0" mb="0" cb="0"/><line nr="702" mi="3" ci="0" mb="2" cb="0"/><line nr="703" mi="5" ci="0" mb="0" cb="0"/><line nr="704" mi="3" ci="0" mb="2" cb="0"/><line nr="705" mi="5" ci="0" mb="0" cb="0"/><line nr="706" mi="3" ci="0" mb="2" cb="0"/><line nr="707" mi="5" ci="0" mb="0" cb="0"/><line nr="708" mi="3" ci="0" mb="2" cb="0"/><line nr="709" mi="5" ci="0" mb="0" cb="0"/><line nr="710" mi="3" ci="0" mb="2" cb="0"/><line nr="711" mi="5" ci="0" mb="0" cb="0"/><line nr="712" mi="3" ci="0" mb="2" cb="0"/><line nr="713" mi="5" ci="0" mb="0" cb="0"/><line nr="714" mi="3" ci="0" mb="2" cb="0"/><line nr="715" mi="5" ci="0" mb="0" cb="0"/><line nr="716" mi="3" ci="0" mb="2" cb="0"/><line nr="717" mi="5" ci="0" mb="0" cb="0"/><line nr="718" mi="3" ci="0" mb="2" cb="0"/><line nr="719" mi="5" ci="0" mb="0" cb="0"/><line nr="720" mi="3" ci="0" mb="2" cb="0"/><line nr="721" mi="5" ci="0" mb="0" cb="0"/><line nr="722" mi="3" ci="0" mb="2" cb="0"/><line nr="723" mi="5" ci="0" mb="0" cb="0"/><line nr="724" mi="3" ci="0" mb="2" cb="0"/><line nr="725" mi="5" ci="0" mb="0" cb="0"/><line nr="727" mi="3" ci="0" mb="0" cb="0"/><line nr="728" mi="5" ci="0" mb="0" cb="0"/><line nr="739" mi="6" ci="0" mb="0" cb="0"/><line nr="749" mi="6" ci="0" mb="0" cb="0"/><line nr="759" mi="6" ci="0" mb="0" cb="0"/><line nr="769" mi="6" ci="0" mb="0" cb="0"/><line nr="779" mi="6" ci="0" mb="0" cb="0"/><line nr="789" mi="6" ci="0" mb="0" cb="0"/><line nr="799" mi="6" ci="0" mb="0" cb="0"/><line nr="811" mi="8" ci="0" mb="0" cb="0"/><line nr="823" mi="8" ci="0" mb="0" cb="0"/><line nr="833" mi="6" ci="0" mb="0" cb="0"/><line nr="843" mi="5" ci="0" mb="0" cb="0"/><line nr="853" mi="6" ci="0" mb="0" cb="0"/><line nr="863" mi="5" ci="0" mb="0" cb="0"/><line nr="873" mi="6" ci="0" mb="0" cb="0"/><line nr="883" mi="5" ci="0" mb="0" cb="0"/><line nr="893" mi="6" ci="0" mb="0" cb="0"/><line nr="903" mi="5" ci="0" mb="0" cb="0"/><line nr="913" mi="6" ci="0" mb="0" cb="0"/><line nr="923" mi="5" ci="0" mb="0" cb="0"/><line nr="933" mi="5" ci="0" mb="0" cb="0"/><line nr="944" mi="7" ci="0" mb="0" cb="0"/><line nr="945" mi="1" ci="0" mb="0" cb="0"/><line nr="955" mi="9" ci="0" mb="0" cb="0"/><line nr="956" mi="1" ci="0" mb="0" cb="0"/><line nr="960" mi="5" ci="0" mb="0" cb="0"/><line nr="961" mi="1" ci="0" mb="0" cb="0"/><line nr="965" mi="5" ci="0" mb="0" cb="0"/><line nr="966" mi="1" ci="0" mb="0" cb="0"/><line nr="974" mi="5" ci="0" mb="0" cb="0"/><line nr="979" mi="3" ci="0" mb="0" cb="0"/><line nr="980" mi="1" ci="0" mb="0" cb="0"/><line nr="989" mi="2" ci="0" mb="0" cb="0"/><line nr="990" mi="1" ci="0" mb="0" cb="0"/><line nr="994" mi="3" ci="0" mb="2" cb="0"/><line nr="995" mi="2" ci="0" mb="0" cb="0"/><line nr="997" mi="3" ci="0" mb="2" cb="0"/><line nr="998" mi="2" ci="0" mb="0" cb="0"/><line nr="1001" mi="10" ci="0" mb="2" cb="0"/><line nr="1006" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="976" covered="0"/><counter type="BRANCH" missed="128" covered="0"/><counter type="LINE" missed="202" covered="0"/><counter type="COMPLEXITY" missed="157" covered="0"/><counter type="METHOD" missed="83" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DoubleEntry.java"/><sourcefile name="NTSendable.java"><line nr="21" mi="4" ci="0" mb="2" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DoubleTopic.java"><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="73" covered="18"/><counter type="LINE" missed="17" covered="5"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FloatSubscriber.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DoubleArraySubscriber.java"/><sourcefile name="BooleanTopic.java"><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DoubleSubscriber.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IntegerEntryImpl.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IntegerArrayEntry.java"/><sourcefile name="ProtobufSubscriber.java"/><sourcefile name="StringPublisher.java"><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StructSubscriber.java"/><sourcefile name="NetworkTableListenerPoller.java"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="7" ci="0" mb="0" cb="0"/><line nr="78" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="2" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="1" cb="1"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="6" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="1" cb="1"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="7" ci="0" mb="2" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="40"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="15" covered="12"/><counter type="COMPLEXITY" missed="14" covered="4"/><counter type="METHOD" missed="10" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RawEntryImpl.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="33"/><counter type="LINE" missed="12" covered="9"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="9" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BooleanArrayPublisher.java"><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="8882" covered="1713"/><counter type="BRANCH" missed="679" covered="71"/><counter type="LINE" missed="2054" covered="380"/><counter type="COMPLEXITY" missed="1149" covered="110"/><counter type="METHOD" missed="758" covered="92"/><counter type="CLASS" missed="63" covered="24"/></package><counter type="INSTRUCTION" missed="8882" covered="1713"/><counter type="BRANCH" missed="679" covered="71"/><counter type="LINE" missed="2054" covered="380"/><counter type="COMPLEXITY" missed="1149" covered="110"/><counter type="METHOD" missed="758" covered="92"/><counter type="CLASS" missed="63" covered="24"/></report>